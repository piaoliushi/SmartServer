// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DevDataNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevDataNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevDataNotify_eCellMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevDataNotify_eCellMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevNetStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevNetStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DevNetStatus_e_NetStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DevNetStatusNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevNetStatusNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevWorkStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevWorkStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DevWorkStatus_e_WorkStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DevWorkStatusNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevWorkStatusNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevAlarmStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevAlarmStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevAlarmStatus_eCellAlarmMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevAlarmStatus_eCellAlarmMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DevAlarmStatusNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DevAlarmStatusNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HandOverReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandOverReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DutyLogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DutyLogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DutyLogAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DutyLogAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserSigninInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserSigninInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignInOutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignInOutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignInOutAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignInOutAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* StationWorkingState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StationWorkingState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckStationWorkingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckStationWorkingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckStationWorkingAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckStationWorkingAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheackStationWorkingNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheackStationWorkingNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogoutAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogoutAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* TurnOnDevMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TurnOnDevMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* TurnOffDevMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TurnOffDevMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommandParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommandParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceCommandMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceCommandMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceCommandResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceCommandResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemindEventNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemindEventNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemindEventAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemindEventAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* WebSocketMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WebSocketMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_CellType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_AlarmStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_AlarmMod_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_LoginAckMod_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2eproto() {
  protobuf_AddDesc_protocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol.proto");
  GOOGLE_CHECK(file != NULL);
  DevDataNotify_descriptor_ = file->message_type(0);
  static const int DevDataNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, ccelldata_),
  };
  DevDataNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevDataNotify_descriptor_,
      DevDataNotify::default_instance_,
      DevDataNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevDataNotify));
  DevDataNotify_eCellMsg_descriptor_ = DevDataNotify_descriptor_->nested_type(0);
  static const int DevDataNotify_eCellMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, scellid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, ecelltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, scellname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, scellvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, baudiovalue_),
  };
  DevDataNotify_eCellMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevDataNotify_eCellMsg_descriptor_,
      DevDataNotify_eCellMsg::default_instance_,
      DevDataNotify_eCellMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevDataNotify_eCellMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevDataNotify_eCellMsg));
  DevNetStatus_descriptor_ = file->message_type(1);
  static const int DevNetStatus_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, enetstatus_),
  };
  DevNetStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevNetStatus_descriptor_,
      DevNetStatus::default_instance_,
      DevNetStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevNetStatus));
  DevNetStatus_e_NetStatus_descriptor_ = DevNetStatus_descriptor_->enum_type(0);
  DevNetStatusNotify_descriptor_ = file->message_type(2);
  static const int DevNetStatusNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatusNotify, cdevcurnetstatus_),
  };
  DevNetStatusNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevNetStatusNotify_descriptor_,
      DevNetStatusNotify::default_instance_,
      DevNetStatusNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatusNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevNetStatusNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevNetStatusNotify));
  DevWorkStatus_descriptor_ = file->message_type(3);
  static const int DevWorkStatus_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, eworkstatus_),
  };
  DevWorkStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevWorkStatus_descriptor_,
      DevWorkStatus::default_instance_,
      DevWorkStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevWorkStatus));
  DevWorkStatus_e_WorkStatus_descriptor_ = DevWorkStatus_descriptor_->enum_type(0);
  DevWorkStatusNotify_descriptor_ = file->message_type(4);
  static const int DevWorkStatusNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatusNotify, cdevcurworkstatus_),
  };
  DevWorkStatusNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevWorkStatusNotify_descriptor_,
      DevWorkStatusNotify::default_instance_,
      DevWorkStatusNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatusNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevWorkStatusNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevWorkStatusNotify));
  DevAlarmStatus_descriptor_ = file->message_type(5);
  static const int DevAlarmStatus_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, nalarmcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, nalarmmod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, ccellalarm_),
  };
  DevAlarmStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevAlarmStatus_descriptor_,
      DevAlarmStatus::default_instance_,
      DevAlarmStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevAlarmStatus));
  DevAlarmStatus_eCellAlarmMsg_descriptor_ = DevAlarmStatus_descriptor_->nested_type(0);
  static const int DevAlarmStatus_eCellAlarmMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, scellid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, scellname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, ccellstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, sstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, sdesp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, nalarmlevel_),
  };
  DevAlarmStatus_eCellAlarmMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevAlarmStatus_eCellAlarmMsg_descriptor_,
      DevAlarmStatus_eCellAlarmMsg::default_instance_,
      DevAlarmStatus_eCellAlarmMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatus_eCellAlarmMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevAlarmStatus_eCellAlarmMsg));
  DevAlarmStatusNotify_descriptor_ = file->message_type(6);
  static const int DevAlarmStatusNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatusNotify, cdevcuralarmstatus_),
  };
  DevAlarmStatusNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DevAlarmStatusNotify_descriptor_,
      DevAlarmStatusNotify::default_instance_,
      DevAlarmStatusNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatusNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DevAlarmStatusNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DevAlarmStatusNotify));
  LoginReq_descriptor_ = file->message_type(7);
  static const int LoginReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, susrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, susrpsw_),
  };
  LoginReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::default_instance_,
      LoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginReq));
  HandOverReq_descriptor_ = file->message_type(8);
  static const int HandOverReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, scurusrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, snewusrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, snewusrpsw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, scontents_),
  };
  HandOverReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HandOverReq_descriptor_,
      HandOverReq::default_instance_,
      HandOverReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandOverReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HandOverReq));
  DutyLogReq_descriptor_ = file->message_type(9);
  static const int DutyLogReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogReq, scurusrnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogReq, scontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogReq, ntype_),
  };
  DutyLogReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DutyLogReq_descriptor_,
      DutyLogReq::default_instance_,
      DutyLogReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DutyLogReq));
  DutyLogAck_descriptor_ = file->message_type(10);
  static const int DutyLogAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogAck, eresult_),
  };
  DutyLogAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DutyLogAck_descriptor_,
      DutyLogAck::default_instance_,
      DutyLogAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DutyLogAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DutyLogAck));
  UserSigninInfo_descriptor_ = file->message_type(11);
  static const int UserSigninInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, eusrlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, usrnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, usrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, usrjobnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, usrheadship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, usrpsw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, signintime_),
  };
  UserSigninInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserSigninInfo_descriptor_,
      UserSigninInfo::default_instance_,
      UserSigninInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserSigninInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserSigninInfo));
  UserInfo_descriptor_ = file->message_type(12);
  static const int UserInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, eusrlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrjobnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrheadship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrrolenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, usrrolename_),
  };
  UserInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::default_instance_,
      UserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInfo));
  LoginAck_descriptor_ = file->message_type(13);
  static const int LoginAck_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, eusrlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrjobnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrheadship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, cdevcurnetstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, cdevcurworkstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, cdevcuralarmstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrpsw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, signusers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, alluserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, eloginmod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrrolenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, usrrolename_),
  };
  LoginAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginAck_descriptor_,
      LoginAck::default_instance_,
      LoginAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginAck));
  SignInOutReq_descriptor_ = file->message_type(14);
  static const int SignInOutReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutReq, issignin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutReq, ssigninname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutReq, ssigninpsw_),
  };
  SignInOutReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SignInOutReq_descriptor_,
      SignInOutReq::default_instance_,
      SignInOutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SignInOutReq));
  SignInOutAck_descriptor_ = file->message_type(15);
  static const int SignInOutAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutAck, issignin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutAck, eresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutAck, cusersinfo_),
  };
  SignInOutAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SignInOutAck_descriptor_,
      SignInOutAck::default_instance_,
      SignInOutAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignInOutAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SignInOutAck));
  StationWorkingState_descriptor_ = file->message_type(16);
  static const int StationWorkingState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationWorkingState, sstationnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationWorkingState, nstate_),
  };
  StationWorkingState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StationWorkingState_descriptor_,
      StationWorkingState::default_instance_,
      StationWorkingState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationWorkingState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StationWorkingState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StationWorkingState));
  CheckStationWorkingReq_descriptor_ = file->message_type(17);
  static const int CheckStationWorkingReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingReq, schildnumber_),
  };
  CheckStationWorkingReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CheckStationWorkingReq_descriptor_,
      CheckStationWorkingReq::default_instance_,
      CheckStationWorkingReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CheckStationWorkingReq));
  CheckStationWorkingAck_descriptor_ = file->message_type(18);
  static const int CheckStationWorkingAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingAck, nresult_),
  };
  CheckStationWorkingAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CheckStationWorkingAck_descriptor_,
      CheckStationWorkingAck::default_instance_,
      CheckStationWorkingAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckStationWorkingAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CheckStationWorkingAck));
  CheackStationWorkingNotify_descriptor_ = file->message_type(19);
  static const int CheackStationWorkingNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, nresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, susernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, susername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, sstationnumber_),
  };
  CheackStationWorkingNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CheackStationWorkingNotify_descriptor_,
      CheackStationWorkingNotify::default_instance_,
      CheackStationWorkingNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheackStationWorkingNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CheackStationWorkingNotify));
  LogoutReq_descriptor_ = file->message_type(20);
  static const int LogoutReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, susrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, susrpsw_),
  };
  LogoutReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogoutReq_descriptor_,
      LogoutReq::default_instance_,
      LogoutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogoutReq));
  LogoutAck_descriptor_ = file->message_type(21);
  static const int LogoutAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutAck, eresult_),
  };
  LogoutAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogoutAck_descriptor_,
      LogoutAck::default_instance_,
      LogoutAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogoutAck));
  TurnOnDevMsg_descriptor_ = file->message_type(22);
  static const int TurnOnDevMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, soperuser_),
  };
  TurnOnDevMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TurnOnDevMsg_descriptor_,
      TurnOnDevMsg::default_instance_,
      TurnOnDevMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOnDevMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TurnOnDevMsg));
  TurnOffDevMsg_descriptor_ = file->message_type(23);
  static const int TurnOffDevMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, soperuser_),
  };
  TurnOffDevMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TurnOffDevMsg_descriptor_,
      TurnOffDevMsg::default_instance_,
      TurnOffDevMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TurnOffDevMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TurnOffDevMsg));
  CommandParam_descriptor_ = file->message_type(24);
  static const int CommandParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandParam, sparamname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandParam, sparamvalue_),
  };
  CommandParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CommandParam_descriptor_,
      CommandParam::default_instance_,
      CommandParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CommandParam));
  DeviceCommandMsg_descriptor_ = file->message_type(25);
  static const int DeviceCommandMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, soperuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, cparams_),
  };
  DeviceCommandMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeviceCommandMsg_descriptor_,
      DeviceCommandMsg::default_instance_,
      DeviceCommandMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeviceCommandMsg));
  DeviceCommandResultNotify_descriptor_ = file->message_type(26);
  static const int DeviceCommandResultNotify_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, sstationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, sdevid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, edevtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, sdevname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, eerrorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, soperuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, cparams_),
  };
  DeviceCommandResultNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeviceCommandResultNotify_descriptor_,
      DeviceCommandResultNotify::default_instance_,
      DeviceCommandResultNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCommandResultNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeviceCommandResultNotify));
  RemindEventNotify_descriptor_ = file->message_type(27);
  static const int RemindEventNotify_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, ntokenid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, eeventtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, eremindtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, sdispatcher_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, shappentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, scontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, nneedconfirm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, ntimeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, nadvanceseconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, sreserved_),
  };
  RemindEventNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemindEventNotify_descriptor_,
      RemindEventNotify::default_instance_,
      RemindEventNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemindEventNotify));
  RemindEventAck_descriptor_ = file->message_type(28);
  static const int RemindEventAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, ntokenid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, nconfirmstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, sconfirmuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, sconfirmcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, sreserved_),
  };
  RemindEventAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemindEventAck_descriptor_,
      RemindEventAck::default_instance_,
      RemindEventAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemindEventAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemindEventAck));
  WebSocketMessage_descriptor_ = file->message_type(29);
  static const int WebSocketMessage_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, nmsgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, smsgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, msgloginreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, msgloginack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, monitordatanty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, devnetstatusnty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, devworkstatusnty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, devalarmstatusnty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, commandresultnty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, msgturnonreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, msgturnoffnty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, msgcommandreq_),
  };
  WebSocketMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WebSocketMessage_descriptor_,
      WebSocketMessage::default_instance_,
      WebSocketMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WebSocketMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WebSocketMessage));
  e_ErrorCode_descriptor_ = file->enum_type(0);
  e_CellType_descriptor_ = file->enum_type(1);
  e_AlarmStatus_descriptor_ = file->enum_type(2);
  e_AlarmMod_descriptor_ = file->enum_type(3);
  e_LoginAckMod_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevDataNotify_descriptor_, &DevDataNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevDataNotify_eCellMsg_descriptor_, &DevDataNotify_eCellMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevNetStatus_descriptor_, &DevNetStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevNetStatusNotify_descriptor_, &DevNetStatusNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevWorkStatus_descriptor_, &DevWorkStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevWorkStatusNotify_descriptor_, &DevWorkStatusNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevAlarmStatus_descriptor_, &DevAlarmStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevAlarmStatus_eCellAlarmMsg_descriptor_, &DevAlarmStatus_eCellAlarmMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DevAlarmStatusNotify_descriptor_, &DevAlarmStatusNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginReq_descriptor_, &LoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HandOverReq_descriptor_, &HandOverReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DutyLogReq_descriptor_, &DutyLogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DutyLogAck_descriptor_, &DutyLogAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserSigninInfo_descriptor_, &UserSigninInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInfo_descriptor_, &UserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginAck_descriptor_, &LoginAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SignInOutReq_descriptor_, &SignInOutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SignInOutAck_descriptor_, &SignInOutAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StationWorkingState_descriptor_, &StationWorkingState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CheckStationWorkingReq_descriptor_, &CheckStationWorkingReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CheckStationWorkingAck_descriptor_, &CheckStationWorkingAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CheackStationWorkingNotify_descriptor_, &CheackStationWorkingNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogoutReq_descriptor_, &LogoutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogoutAck_descriptor_, &LogoutAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TurnOnDevMsg_descriptor_, &TurnOnDevMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TurnOffDevMsg_descriptor_, &TurnOffDevMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CommandParam_descriptor_, &CommandParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeviceCommandMsg_descriptor_, &DeviceCommandMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeviceCommandResultNotify_descriptor_, &DeviceCommandResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemindEventNotify_descriptor_, &RemindEventNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemindEventAck_descriptor_, &RemindEventAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WebSocketMessage_descriptor_, &WebSocketMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2eproto() {
  delete DevDataNotify::default_instance_;
  delete DevDataNotify_reflection_;
  delete DevDataNotify_eCellMsg::default_instance_;
  delete DevDataNotify_eCellMsg_reflection_;
  delete DevNetStatus::default_instance_;
  delete DevNetStatus_reflection_;
  delete DevNetStatusNotify::default_instance_;
  delete DevNetStatusNotify_reflection_;
  delete DevWorkStatus::default_instance_;
  delete DevWorkStatus_reflection_;
  delete DevWorkStatusNotify::default_instance_;
  delete DevWorkStatusNotify_reflection_;
  delete DevAlarmStatus::default_instance_;
  delete DevAlarmStatus_reflection_;
  delete DevAlarmStatus_eCellAlarmMsg::default_instance_;
  delete DevAlarmStatus_eCellAlarmMsg_reflection_;
  delete DevAlarmStatusNotify::default_instance_;
  delete DevAlarmStatusNotify_reflection_;
  delete LoginReq::default_instance_;
  delete LoginReq_reflection_;
  delete HandOverReq::default_instance_;
  delete HandOverReq_reflection_;
  delete DutyLogReq::default_instance_;
  delete DutyLogReq_reflection_;
  delete DutyLogAck::default_instance_;
  delete DutyLogAck_reflection_;
  delete UserSigninInfo::default_instance_;
  delete UserSigninInfo_reflection_;
  delete UserInfo::default_instance_;
  delete UserInfo_reflection_;
  delete LoginAck::default_instance_;
  delete LoginAck_reflection_;
  delete SignInOutReq::default_instance_;
  delete SignInOutReq_reflection_;
  delete SignInOutAck::default_instance_;
  delete SignInOutAck_reflection_;
  delete StationWorkingState::default_instance_;
  delete StationWorkingState_reflection_;
  delete CheckStationWorkingReq::default_instance_;
  delete CheckStationWorkingReq_reflection_;
  delete CheckStationWorkingAck::default_instance_;
  delete CheckStationWorkingAck_reflection_;
  delete CheackStationWorkingNotify::default_instance_;
  delete CheackStationWorkingNotify_reflection_;
  delete LogoutReq::default_instance_;
  delete LogoutReq_reflection_;
  delete LogoutAck::default_instance_;
  delete LogoutAck_reflection_;
  delete TurnOnDevMsg::default_instance_;
  delete TurnOnDevMsg_reflection_;
  delete TurnOffDevMsg::default_instance_;
  delete TurnOffDevMsg_reflection_;
  delete CommandParam::default_instance_;
  delete CommandParam_reflection_;
  delete DeviceCommandMsg::default_instance_;
  delete DeviceCommandMsg_reflection_;
  delete DeviceCommandResultNotify::default_instance_;
  delete DeviceCommandResultNotify_reflection_;
  delete RemindEventNotify::default_instance_;
  delete RemindEventNotify_reflection_;
  delete RemindEventAck::default_instance_;
  delete RemindEventAck_reflection_;
  delete WebSocketMessage::default_instance_;
  delete WebSocketMessage_reflection_;
}

void protobuf_AddDesc_protocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016protocol.proto\"\374\001\n\rDevDataNotify\022\022\n\nsS"
    "tationId\030\001 \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010sDevNa"
    "me\030\003 \001(\t\022\020\n\010eDevType\030\004 \001(\005\022*\n\tcCellData\030"
    "\005 \003(\0132\027.DevDataNotify.eCellMsg\032w\n\010eCellM"
    "sg\022\017\n\007sCellId\030\001 \002(\005\022\036\n\teCellType\030\002 \002(\0162\013"
    ".e_CellType\022\021\n\tsCellName\030\003 \001(\t\022\022\n\nsCellV"
    "alue\030\004 \001(\t\022\023\n\013bAudioValue\030\005 \001(\014\"\275\001\n\014DevN"
    "etStatus\022\022\n\nsStationId\030\001 \002(\t\022\016\n\006sDevId\030\002"
    " \002(\t\022\020\n\010sDevName\030\003 \001(\t\022\020\n\010eDevType\030\004 \001(\005"
    "\022-\n\neNetStatus\030\005 \001(\0162\031.DevNetStatus.e_Ne"
    "tStatus\"6\n\013e_NetStatus\022\n\n\006ONLINE\020\000\022\013\n\007OF"
    "FLINE\020\001\022\016\n\nCONNECTING\020\002\"=\n\022DevNetStatusN"
    "otify\022\'\n\020cDevCurNetStatus\030\001 \003(\0132\r.DevNet"
    "Status\"\371\001\n\rDevWorkStatus\022\022\n\nsStationId\030\001"
    " \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010sDevName\030\003 \001(\t\022\020"
    "\n\010eDevType\030\004 \001(\005\0220\n\013eWorkStatus\030\005 \001(\0162\033."
    "DevWorkStatus.e_WorkStatus\"n\n\014e_WorkStat"
    "us\022\n\n\006RUNING\020\000\022\014\n\010SHUTDOWN\020\001\022\020\n\014ANTENNA_"
    "HOST\020\002\022\022\n\016ANTENNA_BACKUP\020\003\022\r\n\tDETECTING\020"
    "\004\022\017\n\013DEV_UNKNOWN\020\005\"@\n\023DevWorkStatusNotif"
    "y\022)\n\021cDevCurWorkStatus\030\001 \003(\0132\016.DevWorkSt"
    "atus\"\306\002\n\016DevAlarmStatus\022\022\n\nsStationId\030\001 "
    "\002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010sDevName\030\003 \001(\t\022\020\n"
    "\010eDevType\030\004 \001(\005\022\023\n\013nAlarmCount\030\005 \001(\005\022\021\n\t"
    "nAlarmMod\030\006 \001(\005\0221\n\ncCellAlarm\030\007 \003(\0132\035.De"
    "vAlarmStatus.eCellAlarmMsg\032\220\001\n\reCellAlar"
    "mMsg\022\017\n\007sCellId\030\001 \002(\005\022\021\n\tsCellName\030\002 \001(\t"
    "\022#\n\013cCellStatus\030\003 \001(\0162\016.e_AlarmStatus\022\022\n"
    "\nsStartTime\030\004 \001(\t\022\r\n\005sDesp\030\005 \001(\t\022\023\n\013nAla"
    "rmLevel\030\006 \001(\005\"C\n\024DevAlarmStatusNotify\022+\n"
    "\022cDevCurAlarmStatus\030\001 \003(\0132\017.DevAlarmStat"
    "us\"-\n\010LoginReq\022\020\n\010sUsrName\030\001 \001(\t\022\017\n\007sUsr"
    "Psw\030\002 \001(\t\"^\n\013HandOverReq\022\023\n\013sCurUsrName\030"
    "\001 \001(\t\022\023\n\013sNewUsrName\030\002 \001(\t\022\022\n\nsNewUsrPsw"
    "\030\003 \001(\t\022\021\n\tsContents\030\004 \001(\t\"D\n\nDutyLogReq\022"
    "\025\n\rsCurUsrNumber\030\001 \001(\t\022\020\n\010sContent\030\002 \001(\t"
    "\022\r\n\005nType\030\003 \001(\005\"+\n\nDutyLogAck\022\035\n\007eResult"
    "\030\001 \001(\0162\014.e_ErrorCode\"\226\001\n\016UserSigninInfo\022"
    "\021\n\teUsrLevel\030\001 \001(\005\022\021\n\tUsrNumber\030\002 \001(\t\022\017\n"
    "\007UsrName\030\003 \001(\t\022\024\n\014UsrJobNumber\030\004 \001(\t\022\023\n\013"
    "UsrHeadship\030\005 \001(\t\022\016\n\006UsrPsw\030\006 \001(\t\022\022\n\nSig"
    "nInTime\030\007 \001(\t\"\230\001\n\010UserInfo\022\021\n\teUsrLevel\030"
    "\001 \001(\005\022\021\n\tUsrNumber\030\002 \001(\t\022\017\n\007UsrName\030\003 \001("
    "\t\022\024\n\014UsrJobNumber\030\004 \001(\t\022\023\n\013UsrHeadship\030\005"
    " \001(\t\022\025\n\rUsrRoleNumber\030\006 \001(\t\022\023\n\013UsrRoleNa"
    "me\030\007 \001(\t\"\257\003\n\010LoginAck\022\035\n\007eResult\030\001 \001(\0162\014"
    ".e_ErrorCode\022\021\n\teUsrLevel\030\002 \001(\005\022\021\n\tUsrNu"
    "mber\030\003 \001(\t\022\017\n\007UsrName\030\004 \001(\t\022\024\n\014UsrJobNum"
    "ber\030\005 \001(\t\022\023\n\013UsrHeadship\030\006 \001(\t\022\'\n\020cDevCu"
    "rNetStatus\030\007 \003(\0132\r.DevNetStatus\022)\n\021cDevC"
    "urWorkStatus\030\010 \003(\0132\016.DevWorkStatus\022+\n\022cD"
    "evCurAlarmStatus\030\t \003(\0132\017.DevAlarmStatus\022"
    "\016\n\006UsrPsw\030\n \001(\t\022\"\n\tSignUsers\030\013 \003(\0132\017.Use"
    "rSigninInfo\022\036\n\013AllUserInfo\030\014 \003(\0132\t.UserI"
    "nfo\022!\n\teLoginMod\030\r \001(\0162\016.e_LoginAckMod\022\025"
    "\n\rUsrRoleNumber\030\016 \001(\t\022\023\n\013UsrRoleName\030\017 \001"
    "(\t\"I\n\014SignInOutReq\022\020\n\010IsSignIn\030\001 \001(\005\022\023\n\013"
    "sSignInName\030\002 \001(\t\022\022\n\nsSignInPsw\030\003 \001(\t\"d\n"
    "\014SignInOutAck\022\020\n\010IsSignIn\030\001 \001(\005\022\035\n\007eResu"
    "lt\030\002 \001(\0162\014.e_ErrorCode\022#\n\ncUsersInfo\030\003 \001"
    "(\0132\017.UserSigninInfo\"=\n\023StationWorkingSta"
    "te\022\026\n\016sStationNumber\030\001 \001(\t\022\016\n\006nState\030\002 \001"
    "(\005\".\n\026CheckStationWorkingReq\022\024\n\014sChildNu"
    "mber\030\001 \003(\t\")\n\026CheckStationWorkingAck\022\017\n\007"
    "nResult\030\001 \001(\005\"m\n\032CheackStationWorkingNot"
    "ify\022\017\n\007nResult\030\001 \001(\005\022\023\n\013sUserNumber\030\002 \001("
    "\t\022\021\n\tsUserName\030\003 \001(\t\022\026\n\016sStationNumber\030\004"
    " \001(\t\".\n\tLogoutReq\022\020\n\010sUsrName\030\001 \001(\t\022\017\n\007s"
    "UsrPsw\030\002 \001(\t\"*\n\tLogoutAck\022\035\n\007eResult\030\001 \001"
    "(\0162\014.e_ErrorCode\"W\n\014TurnOnDevMsg\022\022\n\nsSta"
    "tionId\030\001 \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010eDevType"
    "\030\003 \001(\005\022\021\n\tsOperUser\030\004 \001(\t\"X\n\rTurnOffDevM"
    "sg\022\022\n\nsStationId\030\001 \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020"
    "\n\010eDevType\030\003 \001(\005\022\021\n\tsOperUser\030\004 \001(\t\"7\n\014C"
    "ommandParam\022\022\n\nsParamName\030\001 \001(\t\022\023\n\013sPara"
    "mValue\030\002 \001(\t\"\215\001\n\020DeviceCommandMsg\022\022\n\nsSt"
    "ationId\030\001 \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010sDevNam"
    "e\030\003 \001(\t\022\020\n\010eDevType\030\004 \001(\005\022\021\n\tsOperUser\030\005"
    " \001(\t\022\036\n\007cParams\030\006 \003(\0132\r.CommandParam\"\266\001\n"
    "\031DeviceCommandResultNotify\022\022\n\nsStationId"
    "\030\001 \002(\t\022\016\n\006sDevId\030\002 \002(\t\022\020\n\010eDevType\030\003 \001(\005"
    "\022\020\n\010sDevName\030\004 \001(\t\022\036\n\010eErrorId\030\005 \001(\0162\014.e"
    "_ErrorCode\022\021\n\tsOperUser\030\006 \001(\t\022\036\n\007cParams"
    "\030\007 \003(\0132\r.CommandParam\"\336\001\n\021RemindEventNot"
    "ify\022\020\n\010nTokenId\030\001 \002(\004\022\022\n\neEventType\030\002 \001("
    "\005\022\023\n\013eRemindType\030\003 \001(\005\022\023\n\013sDispatcher\030\004 "
    "\001(\t\022\023\n\013sHappenTime\030\005 \001(\t\022\020\n\010sContent\030\006 \001"
    "(\t\022\024\n\014nNeedConfirm\030\007 \001(\005\022\020\n\010nTimeout\030\010 \001"
    "(\005\022\027\n\017nAdvanceSeconds\030\t \001(\005\022\021\n\tsReserved"
    "\030\n \001(\t\"{\n\016RemindEventAck\022\020\n\010nTokenId\030\001 \002"
    "(\005\022\025\n\rnConfirmState\030\002 \001(\005\022\024\n\014sConfirmUse"
    "r\030\003 \001(\t\022\027\n\017sConfirmContent\030\004 \001(\t\022\021\n\tsRes"
    "erved\030\005 \001(\t\"\332\003\n\020WebSocketMessage\022\020\n\010nMsg"
    "Type\030\001 \002(\005\022\020\n\010sMsgType\030\002 \002(\t\022\036\n\013msgLogin"
    "Req\030\003 \001(\0132\t.LoginReq\022\036\n\013msgLoginAck\030\004 \001("
    "\0132\t.LoginAck\022&\n\016monitorDataNty\030\005 \001(\0132\016.D"
    "evDataNotify\022,\n\017devNetStatusNty\030\006 \001(\0132\023."
    "DevNetStatusNotify\022.\n\020devWorkStatusNty\030\007"
    " \001(\0132\024.DevWorkStatusNotify\0220\n\021devAlarmSt"
    "atusNty\030\010 \001(\0132\025.DevAlarmStatusNotify\0224\n\020"
    "commandResultNty\030\t \001(\0132\032.DeviceCommandRe"
    "sultNotify\022#\n\014msgTurnOnReq\030\n \001(\0132\r.TurnO"
    "nDevMsg\022%\n\rmsgTurnOffNty\030\013 \001(\0132\016.TurnOff"
    "DevMsg\022(\n\rmsgCommandReq\030\014 \001(\0132\021.DeviceCo"
    "mmandMsg*\351\014\n\013e_ErrorCode\022\t\n\005EC_OK\020\000\022\r\n\tE"
    "C_FAILED\020\001\022\024\n\020EC_USR_NOT_FOUND\020\002\022\031\n\025EC_U"
    "SR_NOT_PERMISSION\020\003\022\024\n\020EC_USR_PSW_ERROR\020"
    "\004\022\027\n\023EC_USR_REPEAT_LOGIN\020\005\022\020\n\014EC_NET_ERR"
    "OR\020\006\022\024\n\020EC_LOGOUT_FAILED\020\007\022\027\n\023EC_CONFIGR"
    "EQ_FAILED\020\010\022\024\n\020EC_TURNON_FAILED\020\t\022\025\n\021EC_"
    "TURNOFF_FAILED\020\n\022\032\n\026EC_ANTENNA_HTOB_FAIL"
    "ED\020\013\022\032\n\026EC_ANTENNA_BTOH_FAILED\020\014\022\027\n\023EC_D"
    "EVICE_NOT_FOUND\020\r\022\022\n\016EC_OBJECT_NULL\020\016\022\023\n"
    "\017EC_OPR_ON_GOING\020\017\022\032\n\026EC_SEND_SMS_MSG_FA"
    "ILED\020\020\022\027\n\023EC_DEV_DISCONNECTED\020\021\022\027\n\023EC_CM"
    "D_SEND_SUCCEED\020\022\022\016\n\nEC_UNKNOWN\020\023\022\032\n\026EC_M"
    "SG_HANDEL_OBJ_NULL\020\024\022\027\n\023EC_ATTENA_POS_ER"
    "ROR\020\025\022\026\n\022EC_NO_ALLOW_EXCUTE\020\026\022\035\n\031EC_NO_A"
    "LLOW_SWITCH_ATTENA\020\027\022\031\n\025EC_DETECT_WAIT_A"
    "TTENA\020\030\022\027\n\023EC_DETECT_RUN_STATE\020\031\022\031\n\025EC_C"
    "MD_FILURE_TIMEOUT\020\032\022\027\n\023EC_CMD_HANDOVER_9"
    "96\020\033\022!\n\035EC_DEV_RUN_OK_CANCEL_SEND_CMD\020\034\022"
    "\"\n\036EC_NO_ALLOW_SWITCH_ATTENA_AUTO\020\035\022\031\n\025E"
    "C_CMD_CODE_NOT_FOUND\020\036\022\033\n\027EC_UNFINISHED_"
    "CMD_EXIST\020\037\022\'\n#EC_DEV_RUN_SHUTDOWN_CANCE"
    "L_SEND_CMD\020 \022\036\n\032EC_ANTEENA_HOST_CMD_CANC"
    "EL\020!\022 \n\034EC_ANTEENA_BACKUP_CMD_CANCEL\020\"\022#"
    "\n\037EC_RELATE_DEV_TURNON_CMD_CANCEL\020#\022$\n E"
    "C_RELATE_DEV_TURNOFF_CMD_CANCEL\020$\022.\n*EC_"
    "RELATE_DEV_996_ONEKEY_TURNON_CMD_CANCEL\020"
    "%\022/\n+EC_RELATE_DEV_996_ONEKEY_TURNOFF_CM"
    "D_CANCEL\020&\022/\n+EC_RELATE_DEV_SOFT_ONEKEY_"
    "TURNON_CMD_CANCEL\020\'\022+\n\'EC_RELATE_DEV_SWI"
    "TCH_ANTTENA_CMD_CANCEL\020(\022/\n+EC_RELATE_DE"
    "V_AUTO_SWITCH_BACKUP_CMD_CANCEL\020)\022\'\n#EC_"
    "UNFINISHED_DEV_TURNON_CMD_CANCEL\020*\022(\n$EC"
    "_UNFINISHED_DEV_TURNOFF_CMD_CANCEL\020+\0222\n."
    "EC_UNFINISHED_DEV_996_ONEKEY_TURNON_CMD_"
    "CANCEL\020,\0223\n/EC_UNFINISHED_DEV_SOFT_ONEKE"
    "Y_TURNON_CMD_CANCEL\020-\022/\n+EC_UNFINISHED_D"
    "EV_SWITCH_ANTTENA_CMD_CANCEL\020.\0223\n/EC_UNF"
    "INISHED_DEV_996_ONEKEY_TURNOFF_CMD_CANCE"
    "L\020/\022/\n+EC_UNFINISHED_AUTO_SWITCH_BACKUP_"
    "CMD_CANCEL\0200\022%\n!EC_CUR_HOST_RUN_SWITCH_C"
    "MD_CANCEL\0201\022\'\n#EC_CUR_BACKUP_RUN_SWITCH_"
    "CMD_CANCEL\0202*%\n\ne_CellType\022\013\n\007DIGITAL\020\000\022"
    "\n\n\006ANALOG\020\001*b\n\re_AlarmStatus\022\t\n\005UPPER\020\000\022"
    "\t\n\005LOWER\020\001\022\n\n\006UPUPER\020\002\022\014\n\010LOWLOWER\020\003\022\t\n\005"
    "STATE\020\004\022\n\n\006DEVICE\020\005\022\n\n\006RESUME\020\006*)\n\ne_Ala"
    "rmMod\022\014\n\010MOD_CELL\020\000\022\r\n\tMOD_OTHER\020\001*8\n\re_"
    "LoginAckMod\022\020\n\014LOGIN_NORMAL\020\000\022\025\n\021LOGIN_S"
    "WITCH_USER\020\001", 6052);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
  DevDataNotify::default_instance_ = new DevDataNotify();
  DevDataNotify_eCellMsg::default_instance_ = new DevDataNotify_eCellMsg();
  DevNetStatus::default_instance_ = new DevNetStatus();
  DevNetStatusNotify::default_instance_ = new DevNetStatusNotify();
  DevWorkStatus::default_instance_ = new DevWorkStatus();
  DevWorkStatusNotify::default_instance_ = new DevWorkStatusNotify();
  DevAlarmStatus::default_instance_ = new DevAlarmStatus();
  DevAlarmStatus_eCellAlarmMsg::default_instance_ = new DevAlarmStatus_eCellAlarmMsg();
  DevAlarmStatusNotify::default_instance_ = new DevAlarmStatusNotify();
  LoginReq::default_instance_ = new LoginReq();
  HandOverReq::default_instance_ = new HandOverReq();
  DutyLogReq::default_instance_ = new DutyLogReq();
  DutyLogAck::default_instance_ = new DutyLogAck();
  UserSigninInfo::default_instance_ = new UserSigninInfo();
  UserInfo::default_instance_ = new UserInfo();
  LoginAck::default_instance_ = new LoginAck();
  SignInOutReq::default_instance_ = new SignInOutReq();
  SignInOutAck::default_instance_ = new SignInOutAck();
  StationWorkingState::default_instance_ = new StationWorkingState();
  CheckStationWorkingReq::default_instance_ = new CheckStationWorkingReq();
  CheckStationWorkingAck::default_instance_ = new CheckStationWorkingAck();
  CheackStationWorkingNotify::default_instance_ = new CheackStationWorkingNotify();
  LogoutReq::default_instance_ = new LogoutReq();
  LogoutAck::default_instance_ = new LogoutAck();
  TurnOnDevMsg::default_instance_ = new TurnOnDevMsg();
  TurnOffDevMsg::default_instance_ = new TurnOffDevMsg();
  CommandParam::default_instance_ = new CommandParam();
  DeviceCommandMsg::default_instance_ = new DeviceCommandMsg();
  DeviceCommandResultNotify::default_instance_ = new DeviceCommandResultNotify();
  RemindEventNotify::default_instance_ = new RemindEventNotify();
  RemindEventAck::default_instance_ = new RemindEventAck();
  WebSocketMessage::default_instance_ = new WebSocketMessage();
  DevDataNotify::default_instance_->InitAsDefaultInstance();
  DevDataNotify_eCellMsg::default_instance_->InitAsDefaultInstance();
  DevNetStatus::default_instance_->InitAsDefaultInstance();
  DevNetStatusNotify::default_instance_->InitAsDefaultInstance();
  DevWorkStatus::default_instance_->InitAsDefaultInstance();
  DevWorkStatusNotify::default_instance_->InitAsDefaultInstance();
  DevAlarmStatus::default_instance_->InitAsDefaultInstance();
  DevAlarmStatus_eCellAlarmMsg::default_instance_->InitAsDefaultInstance();
  DevAlarmStatusNotify::default_instance_->InitAsDefaultInstance();
  LoginReq::default_instance_->InitAsDefaultInstance();
  HandOverReq::default_instance_->InitAsDefaultInstance();
  DutyLogReq::default_instance_->InitAsDefaultInstance();
  DutyLogAck::default_instance_->InitAsDefaultInstance();
  UserSigninInfo::default_instance_->InitAsDefaultInstance();
  UserInfo::default_instance_->InitAsDefaultInstance();
  LoginAck::default_instance_->InitAsDefaultInstance();
  SignInOutReq::default_instance_->InitAsDefaultInstance();
  SignInOutAck::default_instance_->InitAsDefaultInstance();
  StationWorkingState::default_instance_->InitAsDefaultInstance();
  CheckStationWorkingReq::default_instance_->InitAsDefaultInstance();
  CheckStationWorkingAck::default_instance_->InitAsDefaultInstance();
  CheackStationWorkingNotify::default_instance_->InitAsDefaultInstance();
  LogoutReq::default_instance_->InitAsDefaultInstance();
  LogoutAck::default_instance_->InitAsDefaultInstance();
  TurnOnDevMsg::default_instance_->InitAsDefaultInstance();
  TurnOffDevMsg::default_instance_->InitAsDefaultInstance();
  CommandParam::default_instance_->InitAsDefaultInstance();
  DeviceCommandMsg::default_instance_->InitAsDefaultInstance();
  DeviceCommandResultNotify::default_instance_->InitAsDefaultInstance();
  RemindEventNotify::default_instance_->InitAsDefaultInstance();
  RemindEventAck::default_instance_->InitAsDefaultInstance();
  WebSocketMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2eproto {
  StaticDescriptorInitializer_protocol_2eproto() {
    protobuf_AddDesc_protocol_2eproto();
  }
} static_descriptor_initializer_protocol_2eproto_;
const ::google::protobuf::EnumDescriptor* e_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_ErrorCode_descriptor_;
}
bool e_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_CellType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_CellType_descriptor_;
}
bool e_CellType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_AlarmStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_AlarmStatus_descriptor_;
}
bool e_AlarmStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_AlarmMod_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_AlarmMod_descriptor_;
}
bool e_AlarmMod_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_LoginAckMod_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_LoginAckMod_descriptor_;
}
bool e_LoginAckMod_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int DevDataNotify_eCellMsg::kSCellIdFieldNumber;
const int DevDataNotify_eCellMsg::kECellTypeFieldNumber;
const int DevDataNotify_eCellMsg::kSCellNameFieldNumber;
const int DevDataNotify_eCellMsg::kSCellValueFieldNumber;
const int DevDataNotify_eCellMsg::kBAudioValueFieldNumber;
#endif  // !_MSC_VER

DevDataNotify_eCellMsg::DevDataNotify_eCellMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevDataNotify.eCellMsg)
}

void DevDataNotify_eCellMsg::InitAsDefaultInstance() {
}

DevDataNotify_eCellMsg::DevDataNotify_eCellMsg(const DevDataNotify_eCellMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevDataNotify.eCellMsg)
}

void DevDataNotify_eCellMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scellid_ = 0;
  ecelltype_ = 0;
  scellname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scellvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baudiovalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevDataNotify_eCellMsg::~DevDataNotify_eCellMsg() {
  // @@protoc_insertion_point(destructor:DevDataNotify.eCellMsg)
  SharedDtor();
}

void DevDataNotify_eCellMsg::SharedDtor() {
  if (scellname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scellname_;
  }
  if (scellvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scellvalue_;
  }
  if (baudiovalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete baudiovalue_;
  }
  if (this != default_instance_) {
  }
}

void DevDataNotify_eCellMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevDataNotify_eCellMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevDataNotify_eCellMsg_descriptor_;
}

const DevDataNotify_eCellMsg& DevDataNotify_eCellMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevDataNotify_eCellMsg* DevDataNotify_eCellMsg::default_instance_ = NULL;

DevDataNotify_eCellMsg* DevDataNotify_eCellMsg::New() const {
  return new DevDataNotify_eCellMsg;
}

void DevDataNotify_eCellMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DevDataNotify_eCellMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(scellid_, ecelltype_);
    if (has_scellname()) {
      if (scellname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scellname_->clear();
      }
    }
    if (has_scellvalue()) {
      if (scellvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scellvalue_->clear();
      }
    }
    if (has_baudiovalue()) {
      if (baudiovalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        baudiovalue_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevDataNotify_eCellMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevDataNotify.eCellMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sCellId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scellid_)));
          set_has_scellid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eCellType;
        break;
      }

      // required .e_CellType eCellType = 2;
      case 2: {
        if (tag == 16) {
         parse_eCellType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_CellType_IsValid(value)) {
            set_ecelltype(static_cast< ::e_CellType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sCellName;
        break;
      }

      // optional string sCellName = 3;
      case 3: {
        if (tag == 26) {
         parse_sCellName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scellname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scellname().data(), this->scellname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scellname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sCellValue;
        break;
      }

      // optional string sCellValue = 4;
      case 4: {
        if (tag == 34) {
         parse_sCellValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scellvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scellvalue().data(), this->scellvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scellvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bAudioValue;
        break;
      }

      // optional bytes bAudioValue = 5;
      case 5: {
        if (tag == 42) {
         parse_bAudioValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_baudiovalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevDataNotify.eCellMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevDataNotify.eCellMsg)
  return false;
#undef DO_
}

void DevDataNotify_eCellMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevDataNotify.eCellMsg)
  // required int32 sCellId = 1;
  if (has_scellid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scellid(), output);
  }

  // required .e_CellType eCellType = 2;
  if (has_ecelltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ecelltype(), output);
  }

  // optional string sCellName = 3;
  if (has_scellname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellname().data(), this->scellname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->scellname(), output);
  }

  // optional string sCellValue = 4;
  if (has_scellvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellvalue().data(), this->scellvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scellvalue(), output);
  }

  // optional bytes bAudioValue = 5;
  if (has_baudiovalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->baudiovalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevDataNotify.eCellMsg)
}

::google::protobuf::uint8* DevDataNotify_eCellMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevDataNotify.eCellMsg)
  // required int32 sCellId = 1;
  if (has_scellid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scellid(), target);
  }

  // required .e_CellType eCellType = 2;
  if (has_ecelltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ecelltype(), target);
  }

  // optional string sCellName = 3;
  if (has_scellname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellname().data(), this->scellname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->scellname(), target);
  }

  // optional string sCellValue = 4;
  if (has_scellvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellvalue().data(), this->scellvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scellvalue(), target);
  }

  // optional bytes bAudioValue = 5;
  if (has_baudiovalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->baudiovalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevDataNotify.eCellMsg)
  return target;
}

int DevDataNotify_eCellMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 sCellId = 1;
    if (has_scellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scellid());
    }

    // required .e_CellType eCellType = 2;
    if (has_ecelltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ecelltype());
    }

    // optional string sCellName = 3;
    if (has_scellname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scellname());
    }

    // optional string sCellValue = 4;
    if (has_scellvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scellvalue());
    }

    // optional bytes bAudioValue = 5;
    if (has_baudiovalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->baudiovalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevDataNotify_eCellMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevDataNotify_eCellMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevDataNotify_eCellMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevDataNotify_eCellMsg::MergeFrom(const DevDataNotify_eCellMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scellid()) {
      set_scellid(from.scellid());
    }
    if (from.has_ecelltype()) {
      set_ecelltype(from.ecelltype());
    }
    if (from.has_scellname()) {
      set_scellname(from.scellname());
    }
    if (from.has_scellvalue()) {
      set_scellvalue(from.scellvalue());
    }
    if (from.has_baudiovalue()) {
      set_baudiovalue(from.baudiovalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevDataNotify_eCellMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevDataNotify_eCellMsg::CopyFrom(const DevDataNotify_eCellMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevDataNotify_eCellMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DevDataNotify_eCellMsg::Swap(DevDataNotify_eCellMsg* other) {
  if (other != this) {
    std::swap(scellid_, other->scellid_);
    std::swap(ecelltype_, other->ecelltype_);
    std::swap(scellname_, other->scellname_);
    std::swap(scellvalue_, other->scellvalue_);
    std::swap(baudiovalue_, other->baudiovalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevDataNotify_eCellMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevDataNotify_eCellMsg_descriptor_;
  metadata.reflection = DevDataNotify_eCellMsg_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DevDataNotify::kSStationIdFieldNumber;
const int DevDataNotify::kSDevIdFieldNumber;
const int DevDataNotify::kSDevNameFieldNumber;
const int DevDataNotify::kEDevTypeFieldNumber;
const int DevDataNotify::kCCellDataFieldNumber;
#endif  // !_MSC_VER

DevDataNotify::DevDataNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevDataNotify)
}

void DevDataNotify::InitAsDefaultInstance() {
}

DevDataNotify::DevDataNotify(const DevDataNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevDataNotify)
}

void DevDataNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevDataNotify::~DevDataNotify() {
  // @@protoc_insertion_point(destructor:DevDataNotify)
  SharedDtor();
}

void DevDataNotify::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (this != default_instance_) {
  }
}

void DevDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevDataNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevDataNotify_descriptor_;
}

const DevDataNotify& DevDataNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevDataNotify* DevDataNotify::default_instance_ = NULL;

DevDataNotify* DevDataNotify::New() const {
  return new DevDataNotify;
}

void DevDataNotify::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
    edevtype_ = 0;
  }
  ccelldata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 3;
      case 3: {
        if (tag == 26) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 4;
      case 4: {
        if (tag == 32) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cCellData;
        break;
      }

      // repeated .DevDataNotify.eCellMsg cCellData = 5;
      case 5: {
        if (tag == 42) {
         parse_cCellData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ccelldata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cCellData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevDataNotify)
  return false;
#undef DO_
}

void DevDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevDataNotify)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevname(), output);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->edevtype(), output);
  }

  // repeated .DevDataNotify.eCellMsg cCellData = 5;
  for (int i = 0; i < this->ccelldata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->ccelldata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevDataNotify)
}

::google::protobuf::uint8* DevDataNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevDataNotify)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdevname(), target);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->edevtype(), target);
  }

  // repeated .DevDataNotify.eCellMsg cCellData = 5;
  for (int i = 0; i < this->ccelldata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->ccelldata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevDataNotify)
  return target;
}

int DevDataNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional string sDevName = 3;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional int32 eDevType = 4;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

  }
  // repeated .DevDataNotify.eCellMsg cCellData = 5;
  total_size += 1 * this->ccelldata_size();
  for (int i = 0; i < this->ccelldata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ccelldata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevDataNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevDataNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevDataNotify::MergeFrom(const DevDataNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  ccelldata_.MergeFrom(from.ccelldata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevDataNotify::CopyFrom(const DevDataNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevDataNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->ccelldata())) return false;
  return true;
}

void DevDataNotify::Swap(DevDataNotify* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(edevtype_, other->edevtype_);
    ccelldata_.Swap(&other->ccelldata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevDataNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevDataNotify_descriptor_;
  metadata.reflection = DevDataNotify_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* DevNetStatus_e_NetStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevNetStatus_e_NetStatus_descriptor_;
}
bool DevNetStatus_e_NetStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DevNetStatus_e_NetStatus DevNetStatus::ONLINE;
const DevNetStatus_e_NetStatus DevNetStatus::OFFLINE;
const DevNetStatus_e_NetStatus DevNetStatus::CONNECTING;
const DevNetStatus_e_NetStatus DevNetStatus::e_NetStatus_MIN;
const DevNetStatus_e_NetStatus DevNetStatus::e_NetStatus_MAX;
const int DevNetStatus::e_NetStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DevNetStatus::kSStationIdFieldNumber;
const int DevNetStatus::kSDevIdFieldNumber;
const int DevNetStatus::kSDevNameFieldNumber;
const int DevNetStatus::kEDevTypeFieldNumber;
const int DevNetStatus::kENetStatusFieldNumber;
#endif  // !_MSC_VER

DevNetStatus::DevNetStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevNetStatus)
}

void DevNetStatus::InitAsDefaultInstance() {
}

DevNetStatus::DevNetStatus(const DevNetStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevNetStatus)
}

void DevNetStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  enetstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevNetStatus::~DevNetStatus() {
  // @@protoc_insertion_point(destructor:DevNetStatus)
  SharedDtor();
}

void DevNetStatus::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (this != default_instance_) {
  }
}

void DevNetStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevNetStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevNetStatus_descriptor_;
}

const DevNetStatus& DevNetStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevNetStatus* DevNetStatus::default_instance_ = NULL;

DevNetStatus* DevNetStatus::New() const {
  return new DevNetStatus;
}

void DevNetStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DevNetStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(edevtype_, enetstatus_);
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevNetStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevNetStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 3;
      case 3: {
        if (tag == 26) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 4;
      case 4: {
        if (tag == 32) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_eNetStatus;
        break;
      }

      // optional .DevNetStatus.e_NetStatus eNetStatus = 5;
      case 5: {
        if (tag == 40) {
         parse_eNetStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DevNetStatus_e_NetStatus_IsValid(value)) {
            set_enetstatus(static_cast< ::DevNetStatus_e_NetStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevNetStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevNetStatus)
  return false;
#undef DO_
}

void DevNetStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevNetStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevname(), output);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->edevtype(), output);
  }

  // optional .DevNetStatus.e_NetStatus eNetStatus = 5;
  if (has_enetstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->enetstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevNetStatus)
}

::google::protobuf::uint8* DevNetStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevNetStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdevname(), target);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->edevtype(), target);
  }

  // optional .DevNetStatus.e_NetStatus eNetStatus = 5;
  if (has_enetstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->enetstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevNetStatus)
  return target;
}

int DevNetStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional string sDevName = 3;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional int32 eDevType = 4;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional .DevNetStatus.e_NetStatus eNetStatus = 5;
    if (has_enetstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enetstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevNetStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevNetStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevNetStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevNetStatus::MergeFrom(const DevNetStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_enetstatus()) {
      set_enetstatus(from.enetstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevNetStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevNetStatus::CopyFrom(const DevNetStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevNetStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DevNetStatus::Swap(DevNetStatus* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(enetstatus_, other->enetstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevNetStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevNetStatus_descriptor_;
  metadata.reflection = DevNetStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DevNetStatusNotify::kCDevCurNetStatusFieldNumber;
#endif  // !_MSC_VER

DevNetStatusNotify::DevNetStatusNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevNetStatusNotify)
}

void DevNetStatusNotify::InitAsDefaultInstance() {
}

DevNetStatusNotify::DevNetStatusNotify(const DevNetStatusNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevNetStatusNotify)
}

void DevNetStatusNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevNetStatusNotify::~DevNetStatusNotify() {
  // @@protoc_insertion_point(destructor:DevNetStatusNotify)
  SharedDtor();
}

void DevNetStatusNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DevNetStatusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevNetStatusNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevNetStatusNotify_descriptor_;
}

const DevNetStatusNotify& DevNetStatusNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevNetStatusNotify* DevNetStatusNotify::default_instance_ = NULL;

DevNetStatusNotify* DevNetStatusNotify::New() const {
  return new DevNetStatusNotify;
}

void DevNetStatusNotify::Clear() {
  cdevcurnetstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevNetStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevNetStatusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DevNetStatus cDevCurNetStatus = 1;
      case 1: {
        if (tag == 10) {
         parse_cDevCurNetStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcurnetstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cDevCurNetStatus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevNetStatusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevNetStatusNotify)
  return false;
#undef DO_
}

void DevNetStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevNetStatusNotify)
  // repeated .DevNetStatus cDevCurNetStatus = 1;
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cdevcurnetstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevNetStatusNotify)
}

::google::protobuf::uint8* DevNetStatusNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevNetStatusNotify)
  // repeated .DevNetStatus cDevCurNetStatus = 1;
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cdevcurnetstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevNetStatusNotify)
  return target;
}

int DevNetStatusNotify::ByteSize() const {
  int total_size = 0;

  // repeated .DevNetStatus cDevCurNetStatus = 1;
  total_size += 1 * this->cdevcurnetstatus_size();
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcurnetstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevNetStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevNetStatusNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevNetStatusNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevNetStatusNotify::MergeFrom(const DevNetStatusNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  cdevcurnetstatus_.MergeFrom(from.cdevcurnetstatus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevNetStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevNetStatusNotify::CopyFrom(const DevNetStatusNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevNetStatusNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcurnetstatus())) return false;
  return true;
}

void DevNetStatusNotify::Swap(DevNetStatusNotify* other) {
  if (other != this) {
    cdevcurnetstatus_.Swap(&other->cdevcurnetstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevNetStatusNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevNetStatusNotify_descriptor_;
  metadata.reflection = DevNetStatusNotify_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* DevWorkStatus_e_WorkStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevWorkStatus_e_WorkStatus_descriptor_;
}
bool DevWorkStatus_e_WorkStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DevWorkStatus_e_WorkStatus DevWorkStatus::RUNING;
const DevWorkStatus_e_WorkStatus DevWorkStatus::SHUTDOWN;
const DevWorkStatus_e_WorkStatus DevWorkStatus::ANTENNA_HOST;
const DevWorkStatus_e_WorkStatus DevWorkStatus::ANTENNA_BACKUP;
const DevWorkStatus_e_WorkStatus DevWorkStatus::DETECTING;
const DevWorkStatus_e_WorkStatus DevWorkStatus::DEV_UNKNOWN;
const DevWorkStatus_e_WorkStatus DevWorkStatus::e_WorkStatus_MIN;
const DevWorkStatus_e_WorkStatus DevWorkStatus::e_WorkStatus_MAX;
const int DevWorkStatus::e_WorkStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DevWorkStatus::kSStationIdFieldNumber;
const int DevWorkStatus::kSDevIdFieldNumber;
const int DevWorkStatus::kSDevNameFieldNumber;
const int DevWorkStatus::kEDevTypeFieldNumber;
const int DevWorkStatus::kEWorkStatusFieldNumber;
#endif  // !_MSC_VER

DevWorkStatus::DevWorkStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevWorkStatus)
}

void DevWorkStatus::InitAsDefaultInstance() {
}

DevWorkStatus::DevWorkStatus(const DevWorkStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevWorkStatus)
}

void DevWorkStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  eworkstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevWorkStatus::~DevWorkStatus() {
  // @@protoc_insertion_point(destructor:DevWorkStatus)
  SharedDtor();
}

void DevWorkStatus::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (this != default_instance_) {
  }
}

void DevWorkStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevWorkStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevWorkStatus_descriptor_;
}

const DevWorkStatus& DevWorkStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevWorkStatus* DevWorkStatus::default_instance_ = NULL;

DevWorkStatus* DevWorkStatus::New() const {
  return new DevWorkStatus;
}

void DevWorkStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DevWorkStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(edevtype_, eworkstatus_);
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevWorkStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevWorkStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 3;
      case 3: {
        if (tag == 26) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 4;
      case 4: {
        if (tag == 32) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_eWorkStatus;
        break;
      }

      // optional .DevWorkStatus.e_WorkStatus eWorkStatus = 5;
      case 5: {
        if (tag == 40) {
         parse_eWorkStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DevWorkStatus_e_WorkStatus_IsValid(value)) {
            set_eworkstatus(static_cast< ::DevWorkStatus_e_WorkStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevWorkStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevWorkStatus)
  return false;
#undef DO_
}

void DevWorkStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevWorkStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevname(), output);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->edevtype(), output);
  }

  // optional .DevWorkStatus.e_WorkStatus eWorkStatus = 5;
  if (has_eworkstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->eworkstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevWorkStatus)
}

::google::protobuf::uint8* DevWorkStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevWorkStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdevname(), target);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->edevtype(), target);
  }

  // optional .DevWorkStatus.e_WorkStatus eWorkStatus = 5;
  if (has_eworkstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->eworkstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevWorkStatus)
  return target;
}

int DevWorkStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional string sDevName = 3;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional int32 eDevType = 4;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional .DevWorkStatus.e_WorkStatus eWorkStatus = 5;
    if (has_eworkstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eworkstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevWorkStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevWorkStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevWorkStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevWorkStatus::MergeFrom(const DevWorkStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_eworkstatus()) {
      set_eworkstatus(from.eworkstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevWorkStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevWorkStatus::CopyFrom(const DevWorkStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevWorkStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DevWorkStatus::Swap(DevWorkStatus* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(eworkstatus_, other->eworkstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevWorkStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevWorkStatus_descriptor_;
  metadata.reflection = DevWorkStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DevWorkStatusNotify::kCDevCurWorkStatusFieldNumber;
#endif  // !_MSC_VER

DevWorkStatusNotify::DevWorkStatusNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevWorkStatusNotify)
}

void DevWorkStatusNotify::InitAsDefaultInstance() {
}

DevWorkStatusNotify::DevWorkStatusNotify(const DevWorkStatusNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevWorkStatusNotify)
}

void DevWorkStatusNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevWorkStatusNotify::~DevWorkStatusNotify() {
  // @@protoc_insertion_point(destructor:DevWorkStatusNotify)
  SharedDtor();
}

void DevWorkStatusNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DevWorkStatusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevWorkStatusNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevWorkStatusNotify_descriptor_;
}

const DevWorkStatusNotify& DevWorkStatusNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevWorkStatusNotify* DevWorkStatusNotify::default_instance_ = NULL;

DevWorkStatusNotify* DevWorkStatusNotify::New() const {
  return new DevWorkStatusNotify;
}

void DevWorkStatusNotify::Clear() {
  cdevcurworkstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevWorkStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevWorkStatusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DevWorkStatus cDevCurWorkStatus = 1;
      case 1: {
        if (tag == 10) {
         parse_cDevCurWorkStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcurworkstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cDevCurWorkStatus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevWorkStatusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevWorkStatusNotify)
  return false;
#undef DO_
}

void DevWorkStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevWorkStatusNotify)
  // repeated .DevWorkStatus cDevCurWorkStatus = 1;
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cdevcurworkstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevWorkStatusNotify)
}

::google::protobuf::uint8* DevWorkStatusNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevWorkStatusNotify)
  // repeated .DevWorkStatus cDevCurWorkStatus = 1;
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cdevcurworkstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevWorkStatusNotify)
  return target;
}

int DevWorkStatusNotify::ByteSize() const {
  int total_size = 0;

  // repeated .DevWorkStatus cDevCurWorkStatus = 1;
  total_size += 1 * this->cdevcurworkstatus_size();
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcurworkstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevWorkStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevWorkStatusNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevWorkStatusNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevWorkStatusNotify::MergeFrom(const DevWorkStatusNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  cdevcurworkstatus_.MergeFrom(from.cdevcurworkstatus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevWorkStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevWorkStatusNotify::CopyFrom(const DevWorkStatusNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevWorkStatusNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcurworkstatus())) return false;
  return true;
}

void DevWorkStatusNotify::Swap(DevWorkStatusNotify* other) {
  if (other != this) {
    cdevcurworkstatus_.Swap(&other->cdevcurworkstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevWorkStatusNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevWorkStatusNotify_descriptor_;
  metadata.reflection = DevWorkStatusNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DevAlarmStatus_eCellAlarmMsg::kSCellIdFieldNumber;
const int DevAlarmStatus_eCellAlarmMsg::kSCellNameFieldNumber;
const int DevAlarmStatus_eCellAlarmMsg::kCCellStatusFieldNumber;
const int DevAlarmStatus_eCellAlarmMsg::kSStartTimeFieldNumber;
const int DevAlarmStatus_eCellAlarmMsg::kSDespFieldNumber;
const int DevAlarmStatus_eCellAlarmMsg::kNAlarmLevelFieldNumber;
#endif  // !_MSC_VER

DevAlarmStatus_eCellAlarmMsg::DevAlarmStatus_eCellAlarmMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevAlarmStatus.eCellAlarmMsg)
}

void DevAlarmStatus_eCellAlarmMsg::InitAsDefaultInstance() {
}

DevAlarmStatus_eCellAlarmMsg::DevAlarmStatus_eCellAlarmMsg(const DevAlarmStatus_eCellAlarmMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevAlarmStatus.eCellAlarmMsg)
}

void DevAlarmStatus_eCellAlarmMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scellid_ = 0;
  scellname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccellstatus_ = 0;
  sstarttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdesp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nalarmlevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevAlarmStatus_eCellAlarmMsg::~DevAlarmStatus_eCellAlarmMsg() {
  // @@protoc_insertion_point(destructor:DevAlarmStatus.eCellAlarmMsg)
  SharedDtor();
}

void DevAlarmStatus_eCellAlarmMsg::SharedDtor() {
  if (scellname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scellname_;
  }
  if (sstarttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstarttime_;
  }
  if (sdesp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdesp_;
  }
  if (this != default_instance_) {
  }
}

void DevAlarmStatus_eCellAlarmMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevAlarmStatus_eCellAlarmMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevAlarmStatus_eCellAlarmMsg_descriptor_;
}

const DevAlarmStatus_eCellAlarmMsg& DevAlarmStatus_eCellAlarmMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevAlarmStatus_eCellAlarmMsg* DevAlarmStatus_eCellAlarmMsg::default_instance_ = NULL;

DevAlarmStatus_eCellAlarmMsg* DevAlarmStatus_eCellAlarmMsg::New() const {
  return new DevAlarmStatus_eCellAlarmMsg;
}

void DevAlarmStatus_eCellAlarmMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DevAlarmStatus_eCellAlarmMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(scellid_, ccellstatus_);
    if (has_scellname()) {
      if (scellname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scellname_->clear();
      }
    }
    if (has_sstarttime()) {
      if (sstarttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstarttime_->clear();
      }
    }
    if (has_sdesp()) {
      if (sdesp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdesp_->clear();
      }
    }
    nalarmlevel_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevAlarmStatus_eCellAlarmMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevAlarmStatus.eCellAlarmMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sCellId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scellid_)));
          set_has_scellid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sCellName;
        break;
      }

      // optional string sCellName = 2;
      case 2: {
        if (tag == 18) {
         parse_sCellName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scellname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scellname().data(), this->scellname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scellname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cCellStatus;
        break;
      }

      // optional .e_AlarmStatus cCellStatus = 3;
      case 3: {
        if (tag == 24) {
         parse_cCellStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_AlarmStatus_IsValid(value)) {
            set_ccellstatus(static_cast< ::e_AlarmStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStartTime;
        break;
      }

      // optional string sStartTime = 4;
      case 4: {
        if (tag == 34) {
         parse_sStartTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstarttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstarttime().data(), this->sstarttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstarttime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sDesp;
        break;
      }

      // optional string sDesp = 5;
      case 5: {
        if (tag == 42) {
         parse_sDesp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdesp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdesp().data(), this->sdesp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdesp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_nAlarmLevel;
        break;
      }

      // optional int32 nAlarmLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_nAlarmLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalarmlevel_)));
          set_has_nalarmlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevAlarmStatus.eCellAlarmMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevAlarmStatus.eCellAlarmMsg)
  return false;
#undef DO_
}

void DevAlarmStatus_eCellAlarmMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevAlarmStatus.eCellAlarmMsg)
  // required int32 sCellId = 1;
  if (has_scellid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scellid(), output);
  }

  // optional string sCellName = 2;
  if (has_scellname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellname().data(), this->scellname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scellname(), output);
  }

  // optional .e_AlarmStatus cCellStatus = 3;
  if (has_ccellstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ccellstatus(), output);
  }

  // optional string sStartTime = 4;
  if (has_sstarttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstarttime().data(), this->sstarttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstarttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sstarttime(), output);
  }

  // optional string sDesp = 5;
  if (has_sdesp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdesp().data(), this->sdesp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdesp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sdesp(), output);
  }

  // optional int32 nAlarmLevel = 6;
  if (has_nalarmlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nalarmlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevAlarmStatus.eCellAlarmMsg)
}

::google::protobuf::uint8* DevAlarmStatus_eCellAlarmMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevAlarmStatus.eCellAlarmMsg)
  // required int32 sCellId = 1;
  if (has_scellid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scellid(), target);
  }

  // optional string sCellName = 2;
  if (has_scellname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scellname().data(), this->scellname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scellname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scellname(), target);
  }

  // optional .e_AlarmStatus cCellStatus = 3;
  if (has_ccellstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ccellstatus(), target);
  }

  // optional string sStartTime = 4;
  if (has_sstarttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstarttime().data(), this->sstarttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstarttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sstarttime(), target);
  }

  // optional string sDesp = 5;
  if (has_sdesp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdesp().data(), this->sdesp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdesp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sdesp(), target);
  }

  // optional int32 nAlarmLevel = 6;
  if (has_nalarmlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nalarmlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevAlarmStatus.eCellAlarmMsg)
  return target;
}

int DevAlarmStatus_eCellAlarmMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 sCellId = 1;
    if (has_scellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scellid());
    }

    // optional string sCellName = 2;
    if (has_scellname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scellname());
    }

    // optional .e_AlarmStatus cCellStatus = 3;
    if (has_ccellstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ccellstatus());
    }

    // optional string sStartTime = 4;
    if (has_sstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstarttime());
    }

    // optional string sDesp = 5;
    if (has_sdesp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdesp());
    }

    // optional int32 nAlarmLevel = 6;
    if (has_nalarmlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nalarmlevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevAlarmStatus_eCellAlarmMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevAlarmStatus_eCellAlarmMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevAlarmStatus_eCellAlarmMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevAlarmStatus_eCellAlarmMsg::MergeFrom(const DevAlarmStatus_eCellAlarmMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scellid()) {
      set_scellid(from.scellid());
    }
    if (from.has_scellname()) {
      set_scellname(from.scellname());
    }
    if (from.has_ccellstatus()) {
      set_ccellstatus(from.ccellstatus());
    }
    if (from.has_sstarttime()) {
      set_sstarttime(from.sstarttime());
    }
    if (from.has_sdesp()) {
      set_sdesp(from.sdesp());
    }
    if (from.has_nalarmlevel()) {
      set_nalarmlevel(from.nalarmlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevAlarmStatus_eCellAlarmMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevAlarmStatus_eCellAlarmMsg::CopyFrom(const DevAlarmStatus_eCellAlarmMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevAlarmStatus_eCellAlarmMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DevAlarmStatus_eCellAlarmMsg::Swap(DevAlarmStatus_eCellAlarmMsg* other) {
  if (other != this) {
    std::swap(scellid_, other->scellid_);
    std::swap(scellname_, other->scellname_);
    std::swap(ccellstatus_, other->ccellstatus_);
    std::swap(sstarttime_, other->sstarttime_);
    std::swap(sdesp_, other->sdesp_);
    std::swap(nalarmlevel_, other->nalarmlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevAlarmStatus_eCellAlarmMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevAlarmStatus_eCellAlarmMsg_descriptor_;
  metadata.reflection = DevAlarmStatus_eCellAlarmMsg_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DevAlarmStatus::kSStationIdFieldNumber;
const int DevAlarmStatus::kSDevIdFieldNumber;
const int DevAlarmStatus::kSDevNameFieldNumber;
const int DevAlarmStatus::kEDevTypeFieldNumber;
const int DevAlarmStatus::kNAlarmCountFieldNumber;
const int DevAlarmStatus::kNAlarmModFieldNumber;
const int DevAlarmStatus::kCCellAlarmFieldNumber;
#endif  // !_MSC_VER

DevAlarmStatus::DevAlarmStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevAlarmStatus)
}

void DevAlarmStatus::InitAsDefaultInstance() {
}

DevAlarmStatus::DevAlarmStatus(const DevAlarmStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevAlarmStatus)
}

void DevAlarmStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  nalarmcount_ = 0;
  nalarmmod_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevAlarmStatus::~DevAlarmStatus() {
  // @@protoc_insertion_point(destructor:DevAlarmStatus)
  SharedDtor();
}

void DevAlarmStatus::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (this != default_instance_) {
  }
}

void DevAlarmStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevAlarmStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevAlarmStatus_descriptor_;
}

const DevAlarmStatus& DevAlarmStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevAlarmStatus* DevAlarmStatus::default_instance_ = NULL;

DevAlarmStatus* DevAlarmStatus::New() const {
  return new DevAlarmStatus;
}

void DevAlarmStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DevAlarmStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(edevtype_, nalarmcount_);
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
    nalarmmod_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ccellalarm_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevAlarmStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevAlarmStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 3;
      case 3: {
        if (tag == 26) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 4;
      case 4: {
        if (tag == 32) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nAlarmCount;
        break;
      }

      // optional int32 nAlarmCount = 5;
      case 5: {
        if (tag == 40) {
         parse_nAlarmCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalarmcount_)));
          set_has_nalarmcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_nAlarmMod;
        break;
      }

      // optional int32 nAlarmMod = 6;
      case 6: {
        if (tag == 48) {
         parse_nAlarmMod:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalarmmod_)));
          set_has_nalarmmod();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cCellAlarm;
        break;
      }

      // repeated .DevAlarmStatus.eCellAlarmMsg cCellAlarm = 7;
      case 7: {
        if (tag == 58) {
         parse_cCellAlarm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ccellalarm()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cCellAlarm;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevAlarmStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevAlarmStatus)
  return false;
#undef DO_
}

void DevAlarmStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevAlarmStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevname(), output);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->edevtype(), output);
  }

  // optional int32 nAlarmCount = 5;
  if (has_nalarmcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nalarmcount(), output);
  }

  // optional int32 nAlarmMod = 6;
  if (has_nalarmmod()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nalarmmod(), output);
  }

  // repeated .DevAlarmStatus.eCellAlarmMsg cCellAlarm = 7;
  for (int i = 0; i < this->ccellalarm_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->ccellalarm(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevAlarmStatus)
}

::google::protobuf::uint8* DevAlarmStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevAlarmStatus)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdevname(), target);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->edevtype(), target);
  }

  // optional int32 nAlarmCount = 5;
  if (has_nalarmcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nalarmcount(), target);
  }

  // optional int32 nAlarmMod = 6;
  if (has_nalarmmod()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nalarmmod(), target);
  }

  // repeated .DevAlarmStatus.eCellAlarmMsg cCellAlarm = 7;
  for (int i = 0; i < this->ccellalarm_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->ccellalarm(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevAlarmStatus)
  return target;
}

int DevAlarmStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional string sDevName = 3;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional int32 eDevType = 4;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional int32 nAlarmCount = 5;
    if (has_nalarmcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nalarmcount());
    }

    // optional int32 nAlarmMod = 6;
    if (has_nalarmmod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nalarmmod());
    }

  }
  // repeated .DevAlarmStatus.eCellAlarmMsg cCellAlarm = 7;
  total_size += 1 * this->ccellalarm_size();
  for (int i = 0; i < this->ccellalarm_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ccellalarm(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevAlarmStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevAlarmStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevAlarmStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevAlarmStatus::MergeFrom(const DevAlarmStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  ccellalarm_.MergeFrom(from.ccellalarm_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_nalarmcount()) {
      set_nalarmcount(from.nalarmcount());
    }
    if (from.has_nalarmmod()) {
      set_nalarmmod(from.nalarmmod());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevAlarmStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevAlarmStatus::CopyFrom(const DevAlarmStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevAlarmStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->ccellalarm())) return false;
  return true;
}

void DevAlarmStatus::Swap(DevAlarmStatus* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(nalarmcount_, other->nalarmcount_);
    std::swap(nalarmmod_, other->nalarmmod_);
    ccellalarm_.Swap(&other->ccellalarm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevAlarmStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevAlarmStatus_descriptor_;
  metadata.reflection = DevAlarmStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DevAlarmStatusNotify::kCDevCurAlarmStatusFieldNumber;
#endif  // !_MSC_VER

DevAlarmStatusNotify::DevAlarmStatusNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DevAlarmStatusNotify)
}

void DevAlarmStatusNotify::InitAsDefaultInstance() {
}

DevAlarmStatusNotify::DevAlarmStatusNotify(const DevAlarmStatusNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DevAlarmStatusNotify)
}

void DevAlarmStatusNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DevAlarmStatusNotify::~DevAlarmStatusNotify() {
  // @@protoc_insertion_point(destructor:DevAlarmStatusNotify)
  SharedDtor();
}

void DevAlarmStatusNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DevAlarmStatusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DevAlarmStatusNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DevAlarmStatusNotify_descriptor_;
}

const DevAlarmStatusNotify& DevAlarmStatusNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DevAlarmStatusNotify* DevAlarmStatusNotify::default_instance_ = NULL;

DevAlarmStatusNotify* DevAlarmStatusNotify::New() const {
  return new DevAlarmStatusNotify;
}

void DevAlarmStatusNotify::Clear() {
  cdevcuralarmstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DevAlarmStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DevAlarmStatusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DevAlarmStatus cDevCurAlarmStatus = 1;
      case 1: {
        if (tag == 10) {
         parse_cDevCurAlarmStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcuralarmstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cDevCurAlarmStatus;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DevAlarmStatusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DevAlarmStatusNotify)
  return false;
#undef DO_
}

void DevAlarmStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DevAlarmStatusNotify)
  // repeated .DevAlarmStatus cDevCurAlarmStatus = 1;
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cdevcuralarmstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DevAlarmStatusNotify)
}

::google::protobuf::uint8* DevAlarmStatusNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DevAlarmStatusNotify)
  // repeated .DevAlarmStatus cDevCurAlarmStatus = 1;
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cdevcuralarmstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DevAlarmStatusNotify)
  return target;
}

int DevAlarmStatusNotify::ByteSize() const {
  int total_size = 0;

  // repeated .DevAlarmStatus cDevCurAlarmStatus = 1;
  total_size += 1 * this->cdevcuralarmstatus_size();
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcuralarmstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DevAlarmStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DevAlarmStatusNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DevAlarmStatusNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DevAlarmStatusNotify::MergeFrom(const DevAlarmStatusNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  cdevcuralarmstatus_.MergeFrom(from.cdevcuralarmstatus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DevAlarmStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevAlarmStatusNotify::CopyFrom(const DevAlarmStatusNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevAlarmStatusNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcuralarmstatus())) return false;
  return true;
}

void DevAlarmStatusNotify::Swap(DevAlarmStatusNotify* other) {
  if (other != this) {
    cdevcuralarmstatus_.Swap(&other->cdevcuralarmstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DevAlarmStatusNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DevAlarmStatusNotify_descriptor_;
  metadata.reflection = DevAlarmStatusNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginReq::kSUsrNameFieldNumber;
const int LoginReq::kSUsrPswFieldNumber;
#endif  // !_MSC_VER

LoginReq::LoginReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LoginReq)
}

void LoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  susrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susrpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  if (susrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susrname_;
  }
  if (susrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susrpsw_;
  }
  if (this != default_instance_) {
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

LoginReq* LoginReq::default_instance_ = NULL;

LoginReq* LoginReq::New() const {
  return new LoginReq;
}

void LoginReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_susrname()) {
      if (susrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susrname_->clear();
      }
    }
    if (has_susrpsw()) {
      if (susrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susrpsw_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUsrName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susrname().data(), this->susrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sUsrPsw;
        break;
      }

      // optional string sUsrPsw = 2;
      case 2: {
        if (tag == 18) {
         parse_sUsrPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susrpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susrpsw().data(), this->susrpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susrpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginReq)
  // optional string sUsrName = 1;
  if (has_susrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrname().data(), this->susrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->susrname(), output);
  }

  // optional string sUsrPsw = 2;
  if (has_susrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrpsw().data(), this->susrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->susrpsw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginReq)
}

::google::protobuf::uint8* LoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginReq)
  // optional string sUsrName = 1;
  if (has_susrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrname().data(), this->susrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->susrname(), target);
  }

  // optional string sUsrPsw = 2;
  if (has_susrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrpsw().data(), this->susrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->susrpsw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginReq)
  return target;
}

int LoginReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sUsrName = 1;
    if (has_susrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susrname());
    }

    // optional string sUsrPsw = 2;
    if (has_susrpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susrpsw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_susrname()) {
      set_susrname(from.susrname());
    }
    if (from.has_susrpsw()) {
      set_susrpsw(from.susrpsw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other != this) {
    std::swap(susrname_, other->susrname_);
    std::swap(susrpsw_, other->susrpsw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HandOverReq::kSCurUsrNameFieldNumber;
const int HandOverReq::kSNewUsrNameFieldNumber;
const int HandOverReq::kSNewUsrPswFieldNumber;
const int HandOverReq::kSContentsFieldNumber;
#endif  // !_MSC_VER

HandOverReq::HandOverReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HandOverReq)
}

void HandOverReq::InitAsDefaultInstance() {
}

HandOverReq::HandOverReq(const HandOverReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HandOverReq)
}

void HandOverReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scurusrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snewusrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snewusrpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontents_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HandOverReq::~HandOverReq() {
  // @@protoc_insertion_point(destructor:HandOverReq)
  SharedDtor();
}

void HandOverReq::SharedDtor() {
  if (scurusrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scurusrname_;
  }
  if (snewusrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete snewusrname_;
  }
  if (snewusrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete snewusrpsw_;
  }
  if (scontents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scontents_;
  }
  if (this != default_instance_) {
  }
}

void HandOverReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandOverReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandOverReq_descriptor_;
}

const HandOverReq& HandOverReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

HandOverReq* HandOverReq::default_instance_ = NULL;

HandOverReq* HandOverReq::New() const {
  return new HandOverReq;
}

void HandOverReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_scurusrname()) {
      if (scurusrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scurusrname_->clear();
      }
    }
    if (has_snewusrname()) {
      if (snewusrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        snewusrname_->clear();
      }
    }
    if (has_snewusrpsw()) {
      if (snewusrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        snewusrpsw_->clear();
      }
    }
    if (has_scontents()) {
      if (scontents_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scontents_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HandOverReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HandOverReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sCurUsrName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scurusrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scurusrname().data(), this->scurusrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scurusrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sNewUsrName;
        break;
      }

      // optional string sNewUsrName = 2;
      case 2: {
        if (tag == 18) {
         parse_sNewUsrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snewusrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->snewusrname().data(), this->snewusrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "snewusrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sNewUsrPsw;
        break;
      }

      // optional string sNewUsrPsw = 3;
      case 3: {
        if (tag == 26) {
         parse_sNewUsrPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snewusrpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->snewusrpsw().data(), this->snewusrpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "snewusrpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sContents;
        break;
      }

      // optional string sContents = 4;
      case 4: {
        if (tag == 34) {
         parse_sContents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scontents().data(), this->scontents().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scontents");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HandOverReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HandOverReq)
  return false;
#undef DO_
}

void HandOverReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HandOverReq)
  // optional string sCurUsrName = 1;
  if (has_scurusrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scurusrname().data(), this->scurusrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scurusrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scurusrname(), output);
  }

  // optional string sNewUsrName = 2;
  if (has_snewusrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snewusrname().data(), this->snewusrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "snewusrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->snewusrname(), output);
  }

  // optional string sNewUsrPsw = 3;
  if (has_snewusrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snewusrpsw().data(), this->snewusrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "snewusrpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->snewusrpsw(), output);
  }

  // optional string sContents = 4;
  if (has_scontents()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontents().data(), this->scontents().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontents");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scontents(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HandOverReq)
}

::google::protobuf::uint8* HandOverReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HandOverReq)
  // optional string sCurUsrName = 1;
  if (has_scurusrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scurusrname().data(), this->scurusrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scurusrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scurusrname(), target);
  }

  // optional string sNewUsrName = 2;
  if (has_snewusrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snewusrname().data(), this->snewusrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "snewusrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->snewusrname(), target);
  }

  // optional string sNewUsrPsw = 3;
  if (has_snewusrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->snewusrpsw().data(), this->snewusrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "snewusrpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->snewusrpsw(), target);
  }

  // optional string sContents = 4;
  if (has_scontents()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontents().data(), this->scontents().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontents");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scontents(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HandOverReq)
  return target;
}

int HandOverReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sCurUsrName = 1;
    if (has_scurusrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scurusrname());
    }

    // optional string sNewUsrName = 2;
    if (has_snewusrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->snewusrname());
    }

    // optional string sNewUsrPsw = 3;
    if (has_snewusrpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->snewusrpsw());
    }

    // optional string sContents = 4;
    if (has_scontents()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scontents());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandOverReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HandOverReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HandOverReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HandOverReq::MergeFrom(const HandOverReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scurusrname()) {
      set_scurusrname(from.scurusrname());
    }
    if (from.has_snewusrname()) {
      set_snewusrname(from.snewusrname());
    }
    if (from.has_snewusrpsw()) {
      set_snewusrpsw(from.snewusrpsw());
    }
    if (from.has_scontents()) {
      set_scontents(from.scontents());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HandOverReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandOverReq::CopyFrom(const HandOverReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandOverReq::IsInitialized() const {

  return true;
}

void HandOverReq::Swap(HandOverReq* other) {
  if (other != this) {
    std::swap(scurusrname_, other->scurusrname_);
    std::swap(snewusrname_, other->snewusrname_);
    std::swap(snewusrpsw_, other->snewusrpsw_);
    std::swap(scontents_, other->scontents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HandOverReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandOverReq_descriptor_;
  metadata.reflection = HandOverReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DutyLogReq::kSCurUsrNumberFieldNumber;
const int DutyLogReq::kSContentFieldNumber;
const int DutyLogReq::kNTypeFieldNumber;
#endif  // !_MSC_VER

DutyLogReq::DutyLogReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DutyLogReq)
}

void DutyLogReq::InitAsDefaultInstance() {
}

DutyLogReq::DutyLogReq(const DutyLogReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DutyLogReq)
}

void DutyLogReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scurusrnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DutyLogReq::~DutyLogReq() {
  // @@protoc_insertion_point(destructor:DutyLogReq)
  SharedDtor();
}

void DutyLogReq::SharedDtor() {
  if (scurusrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scurusrnumber_;
  }
  if (scontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scontent_;
  }
  if (this != default_instance_) {
  }
}

void DutyLogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DutyLogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DutyLogReq_descriptor_;
}

const DutyLogReq& DutyLogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DutyLogReq* DutyLogReq::default_instance_ = NULL;

DutyLogReq* DutyLogReq::New() const {
  return new DutyLogReq;
}

void DutyLogReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_scurusrnumber()) {
      if (scurusrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scurusrnumber_->clear();
      }
    }
    if (has_scontent()) {
      if (scontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scontent_->clear();
      }
    }
    ntype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DutyLogReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DutyLogReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sCurUsrNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scurusrnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scurusrnumber().data(), this->scurusrnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scurusrnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sContent;
        break;
      }

      // optional string sContent = 2;
      case 2: {
        if (tag == 18) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nType;
        break;
      }

      // optional int32 nType = 3;
      case 3: {
        if (tag == 24) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DutyLogReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DutyLogReq)
  return false;
#undef DO_
}

void DutyLogReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DutyLogReq)
  // optional string sCurUsrNumber = 1;
  if (has_scurusrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scurusrnumber().data(), this->scurusrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scurusrnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scurusrnumber(), output);
  }

  // optional string sContent = 2;
  if (has_scontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scontent(), output);
  }

  // optional int32 nType = 3;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ntype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DutyLogReq)
}

::google::protobuf::uint8* DutyLogReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DutyLogReq)
  // optional string sCurUsrNumber = 1;
  if (has_scurusrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scurusrnumber().data(), this->scurusrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scurusrnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scurusrnumber(), target);
  }

  // optional string sContent = 2;
  if (has_scontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scontent(), target);
  }

  // optional int32 nType = 3;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ntype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DutyLogReq)
  return target;
}

int DutyLogReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sCurUsrNumber = 1;
    if (has_scurusrnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scurusrnumber());
    }

    // optional string sContent = 2;
    if (has_scontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scontent());
    }

    // optional int32 nType = 3;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DutyLogReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DutyLogReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DutyLogReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DutyLogReq::MergeFrom(const DutyLogReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scurusrnumber()) {
      set_scurusrnumber(from.scurusrnumber());
    }
    if (from.has_scontent()) {
      set_scontent(from.scontent());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DutyLogReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DutyLogReq::CopyFrom(const DutyLogReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DutyLogReq::IsInitialized() const {

  return true;
}

void DutyLogReq::Swap(DutyLogReq* other) {
  if (other != this) {
    std::swap(scurusrnumber_, other->scurusrnumber_);
    std::swap(scontent_, other->scontent_);
    std::swap(ntype_, other->ntype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DutyLogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DutyLogReq_descriptor_;
  metadata.reflection = DutyLogReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DutyLogAck::kEResultFieldNumber;
#endif  // !_MSC_VER

DutyLogAck::DutyLogAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DutyLogAck)
}

void DutyLogAck::InitAsDefaultInstance() {
}

DutyLogAck::DutyLogAck(const DutyLogAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DutyLogAck)
}

void DutyLogAck::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DutyLogAck::~DutyLogAck() {
  // @@protoc_insertion_point(destructor:DutyLogAck)
  SharedDtor();
}

void DutyLogAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DutyLogAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DutyLogAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DutyLogAck_descriptor_;
}

const DutyLogAck& DutyLogAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DutyLogAck* DutyLogAck::default_instance_ = NULL;

DutyLogAck* DutyLogAck::New() const {
  return new DutyLogAck;
}

void DutyLogAck::Clear() {
  eresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DutyLogAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DutyLogAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .e_ErrorCode eResult = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_ErrorCode_IsValid(value)) {
            set_eresult(static_cast< ::e_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DutyLogAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DutyLogAck)
  return false;
#undef DO_
}

void DutyLogAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DutyLogAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DutyLogAck)
}

::google::protobuf::uint8* DutyLogAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DutyLogAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DutyLogAck)
  return target;
}

int DutyLogAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .e_ErrorCode eResult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DutyLogAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DutyLogAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DutyLogAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DutyLogAck::MergeFrom(const DutyLogAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DutyLogAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DutyLogAck::CopyFrom(const DutyLogAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DutyLogAck::IsInitialized() const {

  return true;
}

void DutyLogAck::Swap(DutyLogAck* other) {
  if (other != this) {
    std::swap(eresult_, other->eresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DutyLogAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DutyLogAck_descriptor_;
  metadata.reflection = DutyLogAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserSigninInfo::kEUsrLevelFieldNumber;
const int UserSigninInfo::kUsrNumberFieldNumber;
const int UserSigninInfo::kUsrNameFieldNumber;
const int UserSigninInfo::kUsrJobNumberFieldNumber;
const int UserSigninInfo::kUsrHeadshipFieldNumber;
const int UserSigninInfo::kUsrPswFieldNumber;
const int UserSigninInfo::kSignInTimeFieldNumber;
#endif  // !_MSC_VER

UserSigninInfo::UserSigninInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserSigninInfo)
}

void UserSigninInfo::InitAsDefaultInstance() {
}

UserSigninInfo::UserSigninInfo(const UserSigninInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserSigninInfo)
}

void UserSigninInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eusrlevel_ = 0;
  usrnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrjobnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrheadship_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserSigninInfo::~UserSigninInfo() {
  // @@protoc_insertion_point(destructor:UserSigninInfo)
  SharedDtor();
}

void UserSigninInfo::SharedDtor() {
  if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrnumber_;
  }
  if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrname_;
  }
  if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrjobnumber_;
  }
  if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrheadship_;
  }
  if (usrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrpsw_;
  }
  if (signintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signintime_;
  }
  if (this != default_instance_) {
  }
}

void UserSigninInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserSigninInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserSigninInfo_descriptor_;
}

const UserSigninInfo& UserSigninInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

UserSigninInfo* UserSigninInfo::default_instance_ = NULL;

UserSigninInfo* UserSigninInfo::New() const {
  return new UserSigninInfo;
}

void UserSigninInfo::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    eusrlevel_ = 0;
    if (has_usrnumber()) {
      if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrnumber_->clear();
      }
    }
    if (has_usrname()) {
      if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrname_->clear();
      }
    }
    if (has_usrjobnumber()) {
      if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrjobnumber_->clear();
      }
    }
    if (has_usrheadship()) {
      if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrheadship_->clear();
      }
    }
    if (has_usrpsw()) {
      if (usrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrpsw_->clear();
      }
    }
    if (has_signintime()) {
      if (signintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        signintime_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserSigninInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserSigninInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eUsrLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eusrlevel_)));
          set_has_eusrlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UsrNumber;
        break;
      }

      // optional string UsrNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_UsrNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrnumber().data(), this->usrnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UsrName;
        break;
      }

      // optional string UsrName = 3;
      case 3: {
        if (tag == 26) {
         parse_UsrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrname().data(), this->usrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UsrJobNumber;
        break;
      }

      // optional string UsrJobNumber = 4;
      case 4: {
        if (tag == 34) {
         parse_UsrJobNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrjobnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrjobnumber().data(), this->usrjobnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrjobnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_UsrHeadship;
        break;
      }

      // optional string UsrHeadship = 5;
      case 5: {
        if (tag == 42) {
         parse_UsrHeadship:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrheadship()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrheadship().data(), this->usrheadship().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrheadship");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UsrPsw;
        break;
      }

      // optional string UsrPsw = 6;
      case 6: {
        if (tag == 50) {
         parse_UsrPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrpsw().data(), this->usrpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_SignInTime;
        break;
      }

      // optional string SignInTime = 7;
      case 7: {
        if (tag == 58) {
         parse_SignInTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signintime().data(), this->signintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "signintime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserSigninInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserSigninInfo)
  return false;
#undef DO_
}

void UserSigninInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserSigninInfo)
  // optional int32 eUsrLevel = 1;
  if (has_eusrlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eusrlevel(), output);
  }

  // optional string UsrNumber = 2;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usrnumber(), output);
  }

  // optional string UsrName = 3;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usrname(), output);
  }

  // optional string UsrJobNumber = 4;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->usrjobnumber(), output);
  }

  // optional string UsrHeadship = 5;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->usrheadship(), output);
  }

  // optional string UsrPsw = 6;
  if (has_usrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrpsw().data(), this->usrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->usrpsw(), output);
  }

  // optional string SignInTime = 7;
  if (has_signintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signintime().data(), this->signintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signintime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->signintime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserSigninInfo)
}

::google::protobuf::uint8* UserSigninInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserSigninInfo)
  // optional int32 eUsrLevel = 1;
  if (has_eusrlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eusrlevel(), target);
  }

  // optional string UsrNumber = 2;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->usrnumber(), target);
  }

  // optional string UsrName = 3;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usrname(), target);
  }

  // optional string UsrJobNumber = 4;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->usrjobnumber(), target);
  }

  // optional string UsrHeadship = 5;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->usrheadship(), target);
  }

  // optional string UsrPsw = 6;
  if (has_usrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrpsw().data(), this->usrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->usrpsw(), target);
  }

  // optional string SignInTime = 7;
  if (has_signintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signintime().data(), this->signintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signintime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->signintime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserSigninInfo)
  return target;
}

int UserSigninInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 eUsrLevel = 1;
    if (has_eusrlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eusrlevel());
    }

    // optional string UsrNumber = 2;
    if (has_usrnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrnumber());
    }

    // optional string UsrName = 3;
    if (has_usrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrname());
    }

    // optional string UsrJobNumber = 4;
    if (has_usrjobnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrjobnumber());
    }

    // optional string UsrHeadship = 5;
    if (has_usrheadship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrheadship());
    }

    // optional string UsrPsw = 6;
    if (has_usrpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrpsw());
    }

    // optional string SignInTime = 7;
    if (has_signintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signintime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserSigninInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserSigninInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserSigninInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserSigninInfo::MergeFrom(const UserSigninInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eusrlevel()) {
      set_eusrlevel(from.eusrlevel());
    }
    if (from.has_usrnumber()) {
      set_usrnumber(from.usrnumber());
    }
    if (from.has_usrname()) {
      set_usrname(from.usrname());
    }
    if (from.has_usrjobnumber()) {
      set_usrjobnumber(from.usrjobnumber());
    }
    if (from.has_usrheadship()) {
      set_usrheadship(from.usrheadship());
    }
    if (from.has_usrpsw()) {
      set_usrpsw(from.usrpsw());
    }
    if (from.has_signintime()) {
      set_signintime(from.signintime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserSigninInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSigninInfo::CopyFrom(const UserSigninInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSigninInfo::IsInitialized() const {

  return true;
}

void UserSigninInfo::Swap(UserSigninInfo* other) {
  if (other != this) {
    std::swap(eusrlevel_, other->eusrlevel_);
    std::swap(usrnumber_, other->usrnumber_);
    std::swap(usrname_, other->usrname_);
    std::swap(usrjobnumber_, other->usrjobnumber_);
    std::swap(usrheadship_, other->usrheadship_);
    std::swap(usrpsw_, other->usrpsw_);
    std::swap(signintime_, other->signintime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserSigninInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserSigninInfo_descriptor_;
  metadata.reflection = UserSigninInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserInfo::kEUsrLevelFieldNumber;
const int UserInfo::kUsrNumberFieldNumber;
const int UserInfo::kUsrNameFieldNumber;
const int UserInfo::kUsrJobNumberFieldNumber;
const int UserInfo::kUsrHeadshipFieldNumber;
const int UserInfo::kUsrRoleNumberFieldNumber;
const int UserInfo::kUsrRoleNameFieldNumber;
#endif  // !_MSC_VER

UserInfo::UserInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserInfo)
}

void UserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eusrlevel_ = 0;
  usrnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrjobnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrheadship_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrrolenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrnumber_;
  }
  if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrname_;
  }
  if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrjobnumber_;
  }
  if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrheadship_;
  }
  if (usrrolenumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrrolenumber_;
  }
  if (usrrolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrrolename_;
  }
  if (this != default_instance_) {
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

UserInfo* UserInfo::default_instance_ = NULL;

UserInfo* UserInfo::New() const {
  return new UserInfo;
}

void UserInfo::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    eusrlevel_ = 0;
    if (has_usrnumber()) {
      if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrnumber_->clear();
      }
    }
    if (has_usrname()) {
      if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrname_->clear();
      }
    }
    if (has_usrjobnumber()) {
      if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrjobnumber_->clear();
      }
    }
    if (has_usrheadship()) {
      if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrheadship_->clear();
      }
    }
    if (has_usrrolenumber()) {
      if (usrrolenumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrrolenumber_->clear();
      }
    }
    if (has_usrrolename()) {
      if (usrrolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrrolename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eUsrLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eusrlevel_)));
          set_has_eusrlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UsrNumber;
        break;
      }

      // optional string UsrNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_UsrNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrnumber().data(), this->usrnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UsrName;
        break;
      }

      // optional string UsrName = 3;
      case 3: {
        if (tag == 26) {
         parse_UsrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrname().data(), this->usrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UsrJobNumber;
        break;
      }

      // optional string UsrJobNumber = 4;
      case 4: {
        if (tag == 34) {
         parse_UsrJobNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrjobnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrjobnumber().data(), this->usrjobnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrjobnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_UsrHeadship;
        break;
      }

      // optional string UsrHeadship = 5;
      case 5: {
        if (tag == 42) {
         parse_UsrHeadship:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrheadship()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrheadship().data(), this->usrheadship().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrheadship");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UsrRoleNumber;
        break;
      }

      // optional string UsrRoleNumber = 6;
      case 6: {
        if (tag == 50) {
         parse_UsrRoleNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrrolenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrrolenumber().data(), this->usrrolenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrrolenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_UsrRoleName;
        break;
      }

      // optional string UsrRoleName = 7;
      case 7: {
        if (tag == 58) {
         parse_UsrRoleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrrolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrrolename().data(), this->usrrolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrrolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserInfo)
  // optional int32 eUsrLevel = 1;
  if (has_eusrlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eusrlevel(), output);
  }

  // optional string UsrNumber = 2;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usrnumber(), output);
  }

  // optional string UsrName = 3;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usrname(), output);
  }

  // optional string UsrJobNumber = 4;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->usrjobnumber(), output);
  }

  // optional string UsrHeadship = 5;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->usrheadship(), output);
  }

  // optional string UsrRoleNumber = 6;
  if (has_usrrolenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolenumber().data(), this->usrrolenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->usrrolenumber(), output);
  }

  // optional string UsrRoleName = 7;
  if (has_usrrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolename().data(), this->usrrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->usrrolename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserInfo)
}

::google::protobuf::uint8* UserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserInfo)
  // optional int32 eUsrLevel = 1;
  if (has_eusrlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eusrlevel(), target);
  }

  // optional string UsrNumber = 2;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->usrnumber(), target);
  }

  // optional string UsrName = 3;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usrname(), target);
  }

  // optional string UsrJobNumber = 4;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->usrjobnumber(), target);
  }

  // optional string UsrHeadship = 5;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->usrheadship(), target);
  }

  // optional string UsrRoleNumber = 6;
  if (has_usrrolenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolenumber().data(), this->usrrolenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->usrrolenumber(), target);
  }

  // optional string UsrRoleName = 7;
  if (has_usrrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolename().data(), this->usrrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->usrrolename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserInfo)
  return target;
}

int UserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 eUsrLevel = 1;
    if (has_eusrlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eusrlevel());
    }

    // optional string UsrNumber = 2;
    if (has_usrnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrnumber());
    }

    // optional string UsrName = 3;
    if (has_usrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrname());
    }

    // optional string UsrJobNumber = 4;
    if (has_usrjobnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrjobnumber());
    }

    // optional string UsrHeadship = 5;
    if (has_usrheadship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrheadship());
    }

    // optional string UsrRoleNumber = 6;
    if (has_usrrolenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrrolenumber());
    }

    // optional string UsrRoleName = 7;
    if (has_usrrolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrrolename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eusrlevel()) {
      set_eusrlevel(from.eusrlevel());
    }
    if (from.has_usrnumber()) {
      set_usrnumber(from.usrnumber());
    }
    if (from.has_usrname()) {
      set_usrname(from.usrname());
    }
    if (from.has_usrjobnumber()) {
      set_usrjobnumber(from.usrjobnumber());
    }
    if (from.has_usrheadship()) {
      set_usrheadship(from.usrheadship());
    }
    if (from.has_usrrolenumber()) {
      set_usrrolenumber(from.usrrolenumber());
    }
    if (from.has_usrrolename()) {
      set_usrrolename(from.usrrolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {

  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other != this) {
    std::swap(eusrlevel_, other->eusrlevel_);
    std::swap(usrnumber_, other->usrnumber_);
    std::swap(usrname_, other->usrname_);
    std::swap(usrjobnumber_, other->usrjobnumber_);
    std::swap(usrheadship_, other->usrheadship_);
    std::swap(usrrolenumber_, other->usrrolenumber_);
    std::swap(usrrolename_, other->usrrolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginAck::kEResultFieldNumber;
const int LoginAck::kEUsrLevelFieldNumber;
const int LoginAck::kUsrNumberFieldNumber;
const int LoginAck::kUsrNameFieldNumber;
const int LoginAck::kUsrJobNumberFieldNumber;
const int LoginAck::kUsrHeadshipFieldNumber;
const int LoginAck::kCDevCurNetStatusFieldNumber;
const int LoginAck::kCDevCurWorkStatusFieldNumber;
const int LoginAck::kCDevCurAlarmStatusFieldNumber;
const int LoginAck::kUsrPswFieldNumber;
const int LoginAck::kSignUsersFieldNumber;
const int LoginAck::kAllUserInfoFieldNumber;
const int LoginAck::kELoginModFieldNumber;
const int LoginAck::kUsrRoleNumberFieldNumber;
const int LoginAck::kUsrRoleNameFieldNumber;
#endif  // !_MSC_VER

LoginAck::LoginAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginAck)
}

void LoginAck::InitAsDefaultInstance() {
}

LoginAck::LoginAck(const LoginAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LoginAck)
}

void LoginAck::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eresult_ = 0;
  eusrlevel_ = 0;
  usrnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrjobnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrheadship_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eloginmod_ = 0;
  usrrolenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usrrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginAck::~LoginAck() {
  // @@protoc_insertion_point(destructor:LoginAck)
  SharedDtor();
}

void LoginAck::SharedDtor() {
  if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrnumber_;
  }
  if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrname_;
  }
  if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrjobnumber_;
  }
  if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrheadship_;
  }
  if (usrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrpsw_;
  }
  if (usrrolenumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrrolenumber_;
  }
  if (usrrolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usrrolename_;
  }
  if (this != default_instance_) {
  }
}

void LoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginAck_descriptor_;
}

const LoginAck& LoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

LoginAck* LoginAck::default_instance_ = NULL;

LoginAck* LoginAck::New() const {
  return new LoginAck;
}

void LoginAck::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LoginAck*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(eresult_, eusrlevel_);
    if (has_usrnumber()) {
      if (usrnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrnumber_->clear();
      }
    }
    if (has_usrname()) {
      if (usrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrname_->clear();
      }
    }
    if (has_usrjobnumber()) {
      if (usrjobnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrjobnumber_->clear();
      }
    }
    if (has_usrheadship()) {
      if (usrheadship_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrheadship_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 29184) {
    if (has_usrpsw()) {
      if (usrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrpsw_->clear();
      }
    }
    eloginmod_ = 0;
    if (has_usrrolenumber()) {
      if (usrrolenumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrrolenumber_->clear();
      }
    }
    if (has_usrrolename()) {
      if (usrrolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usrrolename_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  cdevcurnetstatus_.Clear();
  cdevcurworkstatus_.Clear();
  cdevcuralarmstatus_.Clear();
  signusers_.Clear();
  alluserinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .e_ErrorCode eResult = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_ErrorCode_IsValid(value)) {
            set_eresult(static_cast< ::e_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eUsrLevel;
        break;
      }

      // optional int32 eUsrLevel = 2;
      case 2: {
        if (tag == 16) {
         parse_eUsrLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eusrlevel_)));
          set_has_eusrlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UsrNumber;
        break;
      }

      // optional string UsrNumber = 3;
      case 3: {
        if (tag == 26) {
         parse_UsrNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrnumber().data(), this->usrnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UsrName;
        break;
      }

      // optional string UsrName = 4;
      case 4: {
        if (tag == 34) {
         parse_UsrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrname().data(), this->usrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_UsrJobNumber;
        break;
      }

      // optional string UsrJobNumber = 5;
      case 5: {
        if (tag == 42) {
         parse_UsrJobNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrjobnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrjobnumber().data(), this->usrjobnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrjobnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UsrHeadship;
        break;
      }

      // optional string UsrHeadship = 6;
      case 6: {
        if (tag == 50) {
         parse_UsrHeadship:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrheadship()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrheadship().data(), this->usrheadship().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrheadship");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cDevCurNetStatus;
        break;
      }

      // repeated .DevNetStatus cDevCurNetStatus = 7;
      case 7: {
        if (tag == 58) {
         parse_cDevCurNetStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcurnetstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cDevCurNetStatus;
        if (input->ExpectTag(66)) goto parse_cDevCurWorkStatus;
        break;
      }

      // repeated .DevWorkStatus cDevCurWorkStatus = 8;
      case 8: {
        if (tag == 66) {
         parse_cDevCurWorkStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcurworkstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cDevCurWorkStatus;
        if (input->ExpectTag(74)) goto parse_cDevCurAlarmStatus;
        break;
      }

      // repeated .DevAlarmStatus cDevCurAlarmStatus = 9;
      case 9: {
        if (tag == 74) {
         parse_cDevCurAlarmStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cdevcuralarmstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_cDevCurAlarmStatus;
        if (input->ExpectTag(82)) goto parse_UsrPsw;
        break;
      }

      // optional string UsrPsw = 10;
      case 10: {
        if (tag == 82) {
         parse_UsrPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrpsw().data(), this->usrpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_SignUsers;
        break;
      }

      // repeated .UserSigninInfo SignUsers = 11;
      case 11: {
        if (tag == 90) {
         parse_SignUsers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signusers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_SignUsers;
        if (input->ExpectTag(98)) goto parse_AllUserInfo;
        break;
      }

      // repeated .UserInfo AllUserInfo = 12;
      case 12: {
        if (tag == 98) {
         parse_AllUserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_alluserinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_AllUserInfo;
        if (input->ExpectTag(104)) goto parse_eLoginMod;
        break;
      }

      // optional .e_LoginAckMod eLoginMod = 13;
      case 13: {
        if (tag == 104) {
         parse_eLoginMod:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_LoginAckMod_IsValid(value)) {
            set_eloginmod(static_cast< ::e_LoginAckMod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_UsrRoleNumber;
        break;
      }

      // optional string UsrRoleNumber = 14;
      case 14: {
        if (tag == 114) {
         parse_UsrRoleNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrrolenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrrolenumber().data(), this->usrrolenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrrolenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_UsrRoleName;
        break;
      }

      // optional string UsrRoleName = 15;
      case 15: {
        if (tag == 122) {
         parse_UsrRoleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usrrolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usrrolename().data(), this->usrrolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usrrolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginAck)
  return false;
#undef DO_
}

void LoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eresult(), output);
  }

  // optional int32 eUsrLevel = 2;
  if (has_eusrlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eusrlevel(), output);
  }

  // optional string UsrNumber = 3;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usrnumber(), output);
  }

  // optional string UsrName = 4;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->usrname(), output);
  }

  // optional string UsrJobNumber = 5;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->usrjobnumber(), output);
  }

  // optional string UsrHeadship = 6;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->usrheadship(), output);
  }

  // repeated .DevNetStatus cDevCurNetStatus = 7;
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cdevcurnetstatus(i), output);
  }

  // repeated .DevWorkStatus cDevCurWorkStatus = 8;
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->cdevcurworkstatus(i), output);
  }

  // repeated .DevAlarmStatus cDevCurAlarmStatus = 9;
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->cdevcuralarmstatus(i), output);
  }

  // optional string UsrPsw = 10;
  if (has_usrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrpsw().data(), this->usrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->usrpsw(), output);
  }

  // repeated .UserSigninInfo SignUsers = 11;
  for (int i = 0; i < this->signusers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->signusers(i), output);
  }

  // repeated .UserInfo AllUserInfo = 12;
  for (int i = 0; i < this->alluserinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->alluserinfo(i), output);
  }

  // optional .e_LoginAckMod eLoginMod = 13;
  if (has_eloginmod()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->eloginmod(), output);
  }

  // optional string UsrRoleNumber = 14;
  if (has_usrrolenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolenumber().data(), this->usrrolenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->usrrolenumber(), output);
  }

  // optional string UsrRoleName = 15;
  if (has_usrrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolename().data(), this->usrrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->usrrolename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginAck)
}

::google::protobuf::uint8* LoginAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eresult(), target);
  }

  // optional int32 eUsrLevel = 2;
  if (has_eusrlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eusrlevel(), target);
  }

  // optional string UsrNumber = 3;
  if (has_usrnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrnumber().data(), this->usrnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usrnumber(), target);
  }

  // optional string UsrName = 4;
  if (has_usrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrname().data(), this->usrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->usrname(), target);
  }

  // optional string UsrJobNumber = 5;
  if (has_usrjobnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrjobnumber().data(), this->usrjobnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrjobnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->usrjobnumber(), target);
  }

  // optional string UsrHeadship = 6;
  if (has_usrheadship()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrheadship().data(), this->usrheadship().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrheadship");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->usrheadship(), target);
  }

  // repeated .DevNetStatus cDevCurNetStatus = 7;
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->cdevcurnetstatus(i), target);
  }

  // repeated .DevWorkStatus cDevCurWorkStatus = 8;
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->cdevcurworkstatus(i), target);
  }

  // repeated .DevAlarmStatus cDevCurAlarmStatus = 9;
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->cdevcuralarmstatus(i), target);
  }

  // optional string UsrPsw = 10;
  if (has_usrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrpsw().data(), this->usrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->usrpsw(), target);
  }

  // repeated .UserSigninInfo SignUsers = 11;
  for (int i = 0; i < this->signusers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->signusers(i), target);
  }

  // repeated .UserInfo AllUserInfo = 12;
  for (int i = 0; i < this->alluserinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->alluserinfo(i), target);
  }

  // optional .e_LoginAckMod eLoginMod = 13;
  if (has_eloginmod()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->eloginmod(), target);
  }

  // optional string UsrRoleNumber = 14;
  if (has_usrrolenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolenumber().data(), this->usrrolenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->usrrolenumber(), target);
  }

  // optional string UsrRoleName = 15;
  if (has_usrrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usrrolename().data(), this->usrrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usrrolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->usrrolename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginAck)
  return target;
}

int LoginAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .e_ErrorCode eResult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eresult());
    }

    // optional int32 eUsrLevel = 2;
    if (has_eusrlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eusrlevel());
    }

    // optional string UsrNumber = 3;
    if (has_usrnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrnumber());
    }

    // optional string UsrName = 4;
    if (has_usrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrname());
    }

    // optional string UsrJobNumber = 5;
    if (has_usrjobnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrjobnumber());
    }

    // optional string UsrHeadship = 6;
    if (has_usrheadship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrheadship());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional string UsrPsw = 10;
    if (has_usrpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrpsw());
    }

    // optional .e_LoginAckMod eLoginMod = 13;
    if (has_eloginmod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eloginmod());
    }

    // optional string UsrRoleNumber = 14;
    if (has_usrrolenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrrolenumber());
    }

    // optional string UsrRoleName = 15;
    if (has_usrrolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usrrolename());
    }

  }
  // repeated .DevNetStatus cDevCurNetStatus = 7;
  total_size += 1 * this->cdevcurnetstatus_size();
  for (int i = 0; i < this->cdevcurnetstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcurnetstatus(i));
  }

  // repeated .DevWorkStatus cDevCurWorkStatus = 8;
  total_size += 1 * this->cdevcurworkstatus_size();
  for (int i = 0; i < this->cdevcurworkstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcurworkstatus(i));
  }

  // repeated .DevAlarmStatus cDevCurAlarmStatus = 9;
  total_size += 1 * this->cdevcuralarmstatus_size();
  for (int i = 0; i < this->cdevcuralarmstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cdevcuralarmstatus(i));
  }

  // repeated .UserSigninInfo SignUsers = 11;
  total_size += 1 * this->signusers_size();
  for (int i = 0; i < this->signusers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signusers(i));
  }

  // repeated .UserInfo AllUserInfo = 12;
  total_size += 1 * this->alluserinfo_size();
  for (int i = 0; i < this->alluserinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->alluserinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginAck::MergeFrom(const LoginAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  cdevcurnetstatus_.MergeFrom(from.cdevcurnetstatus_);
  cdevcurworkstatus_.MergeFrom(from.cdevcurworkstatus_);
  cdevcuralarmstatus_.MergeFrom(from.cdevcuralarmstatus_);
  signusers_.MergeFrom(from.signusers_);
  alluserinfo_.MergeFrom(from.alluserinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_eusrlevel()) {
      set_eusrlevel(from.eusrlevel());
    }
    if (from.has_usrnumber()) {
      set_usrnumber(from.usrnumber());
    }
    if (from.has_usrname()) {
      set_usrname(from.usrname());
    }
    if (from.has_usrjobnumber()) {
      set_usrjobnumber(from.usrjobnumber());
    }
    if (from.has_usrheadship()) {
      set_usrheadship(from.usrheadship());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_usrpsw()) {
      set_usrpsw(from.usrpsw());
    }
    if (from.has_eloginmod()) {
      set_eloginmod(from.eloginmod());
    }
    if (from.has_usrrolenumber()) {
      set_usrrolenumber(from.usrrolenumber());
    }
    if (from.has_usrrolename()) {
      set_usrrolename(from.usrrolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginAck::CopyFrom(const LoginAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginAck::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcurnetstatus())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcurworkstatus())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cdevcuralarmstatus())) return false;
  return true;
}

void LoginAck::Swap(LoginAck* other) {
  if (other != this) {
    std::swap(eresult_, other->eresult_);
    std::swap(eusrlevel_, other->eusrlevel_);
    std::swap(usrnumber_, other->usrnumber_);
    std::swap(usrname_, other->usrname_);
    std::swap(usrjobnumber_, other->usrjobnumber_);
    std::swap(usrheadship_, other->usrheadship_);
    cdevcurnetstatus_.Swap(&other->cdevcurnetstatus_);
    cdevcurworkstatus_.Swap(&other->cdevcurworkstatus_);
    cdevcuralarmstatus_.Swap(&other->cdevcuralarmstatus_);
    std::swap(usrpsw_, other->usrpsw_);
    signusers_.Swap(&other->signusers_);
    alluserinfo_.Swap(&other->alluserinfo_);
    std::swap(eloginmod_, other->eloginmod_);
    std::swap(usrrolenumber_, other->usrrolenumber_);
    std::swap(usrrolename_, other->usrrolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginAck_descriptor_;
  metadata.reflection = LoginAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SignInOutReq::kIsSignInFieldNumber;
const int SignInOutReq::kSSignInNameFieldNumber;
const int SignInOutReq::kSSignInPswFieldNumber;
#endif  // !_MSC_VER

SignInOutReq::SignInOutReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SignInOutReq)
}

void SignInOutReq::InitAsDefaultInstance() {
}

SignInOutReq::SignInOutReq(const SignInOutReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SignInOutReq)
}

void SignInOutReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issignin_ = 0;
  ssigninname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssigninpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SignInOutReq::~SignInOutReq() {
  // @@protoc_insertion_point(destructor:SignInOutReq)
  SharedDtor();
}

void SignInOutReq::SharedDtor() {
  if (ssigninname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssigninname_;
  }
  if (ssigninpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssigninpsw_;
  }
  if (this != default_instance_) {
  }
}

void SignInOutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInOutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignInOutReq_descriptor_;
}

const SignInOutReq& SignInOutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SignInOutReq* SignInOutReq::default_instance_ = NULL;

SignInOutReq* SignInOutReq::New() const {
  return new SignInOutReq;
}

void SignInOutReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issignin_ = 0;
    if (has_ssigninname()) {
      if (ssigninname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssigninname_->clear();
      }
    }
    if (has_ssigninpsw()) {
      if (ssigninpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssigninpsw_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SignInOutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SignInOutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 IsSignIn = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &issignin_)));
          set_has_issignin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sSignInName;
        break;
      }

      // optional string sSignInName = 2;
      case 2: {
        if (tag == 18) {
         parse_sSignInName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssigninname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssigninname().data(), this->ssigninname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ssigninname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sSignInPsw;
        break;
      }

      // optional string sSignInPsw = 3;
      case 3: {
        if (tag == 26) {
         parse_sSignInPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssigninpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssigninpsw().data(), this->ssigninpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ssigninpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SignInOutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SignInOutReq)
  return false;
#undef DO_
}

void SignInOutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SignInOutReq)
  // optional int32 IsSignIn = 1;
  if (has_issignin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->issignin(), output);
  }

  // optional string sSignInName = 2;
  if (has_ssigninname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssigninname().data(), this->ssigninname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssigninname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ssigninname(), output);
  }

  // optional string sSignInPsw = 3;
  if (has_ssigninpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssigninpsw().data(), this->ssigninpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssigninpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ssigninpsw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SignInOutReq)
}

::google::protobuf::uint8* SignInOutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SignInOutReq)
  // optional int32 IsSignIn = 1;
  if (has_issignin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->issignin(), target);
  }

  // optional string sSignInName = 2;
  if (has_ssigninname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssigninname().data(), this->ssigninname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssigninname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ssigninname(), target);
  }

  // optional string sSignInPsw = 3;
  if (has_ssigninpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssigninpsw().data(), this->ssigninpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssigninpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ssigninpsw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SignInOutReq)
  return target;
}

int SignInOutReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 IsSignIn = 1;
    if (has_issignin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->issignin());
    }

    // optional string sSignInName = 2;
    if (has_ssigninname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssigninname());
    }

    // optional string sSignInPsw = 3;
    if (has_ssigninpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssigninpsw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInOutReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SignInOutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SignInOutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SignInOutReq::MergeFrom(const SignInOutReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issignin()) {
      set_issignin(from.issignin());
    }
    if (from.has_ssigninname()) {
      set_ssigninname(from.ssigninname());
    }
    if (from.has_ssigninpsw()) {
      set_ssigninpsw(from.ssigninpsw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SignInOutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInOutReq::CopyFrom(const SignInOutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInOutReq::IsInitialized() const {

  return true;
}

void SignInOutReq::Swap(SignInOutReq* other) {
  if (other != this) {
    std::swap(issignin_, other->issignin_);
    std::swap(ssigninname_, other->ssigninname_);
    std::swap(ssigninpsw_, other->ssigninpsw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SignInOutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignInOutReq_descriptor_;
  metadata.reflection = SignInOutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SignInOutAck::kIsSignInFieldNumber;
const int SignInOutAck::kEResultFieldNumber;
const int SignInOutAck::kCUsersInfoFieldNumber;
#endif  // !_MSC_VER

SignInOutAck::SignInOutAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SignInOutAck)
}

void SignInOutAck::InitAsDefaultInstance() {
  cusersinfo_ = const_cast< ::UserSigninInfo*>(&::UserSigninInfo::default_instance());
}

SignInOutAck::SignInOutAck(const SignInOutAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SignInOutAck)
}

void SignInOutAck::SharedCtor() {
  _cached_size_ = 0;
  issignin_ = 0;
  eresult_ = 0;
  cusersinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SignInOutAck::~SignInOutAck() {
  // @@protoc_insertion_point(destructor:SignInOutAck)
  SharedDtor();
}

void SignInOutAck::SharedDtor() {
  if (this != default_instance_) {
    delete cusersinfo_;
  }
}

void SignInOutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignInOutAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignInOutAck_descriptor_;
}

const SignInOutAck& SignInOutAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SignInOutAck* SignInOutAck::default_instance_ = NULL;

SignInOutAck* SignInOutAck::New() const {
  return new SignInOutAck;
}

void SignInOutAck::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SignInOutAck*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(issignin_, eresult_);
    if (has_cusersinfo()) {
      if (cusersinfo_ != NULL) cusersinfo_->::UserSigninInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SignInOutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SignInOutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 IsSignIn = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &issignin_)));
          set_has_issignin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eResult;
        break;
      }

      // optional .e_ErrorCode eResult = 2;
      case 2: {
        if (tag == 16) {
         parse_eResult:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_ErrorCode_IsValid(value)) {
            set_eresult(static_cast< ::e_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cUsersInfo;
        break;
      }

      // optional .UserSigninInfo cUsersInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_cUsersInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cusersinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SignInOutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SignInOutAck)
  return false;
#undef DO_
}

void SignInOutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SignInOutAck)
  // optional int32 IsSignIn = 1;
  if (has_issignin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->issignin(), output);
  }

  // optional .e_ErrorCode eResult = 2;
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->eresult(), output);
  }

  // optional .UserSigninInfo cUsersInfo = 3;
  if (has_cusersinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cusersinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SignInOutAck)
}

::google::protobuf::uint8* SignInOutAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SignInOutAck)
  // optional int32 IsSignIn = 1;
  if (has_issignin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->issignin(), target);
  }

  // optional .e_ErrorCode eResult = 2;
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->eresult(), target);
  }

  // optional .UserSigninInfo cUsersInfo = 3;
  if (has_cusersinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cusersinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SignInOutAck)
  return target;
}

int SignInOutAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 IsSignIn = 1;
    if (has_issignin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->issignin());
    }

    // optional .e_ErrorCode eResult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eresult());
    }

    // optional .UserSigninInfo cUsersInfo = 3;
    if (has_cusersinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cusersinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignInOutAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SignInOutAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SignInOutAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SignInOutAck::MergeFrom(const SignInOutAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issignin()) {
      set_issignin(from.issignin());
    }
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
    if (from.has_cusersinfo()) {
      mutable_cusersinfo()->::UserSigninInfo::MergeFrom(from.cusersinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SignInOutAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInOutAck::CopyFrom(const SignInOutAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInOutAck::IsInitialized() const {

  return true;
}

void SignInOutAck::Swap(SignInOutAck* other) {
  if (other != this) {
    std::swap(issignin_, other->issignin_);
    std::swap(eresult_, other->eresult_);
    std::swap(cusersinfo_, other->cusersinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SignInOutAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignInOutAck_descriptor_;
  metadata.reflection = SignInOutAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StationWorkingState::kSStationNumberFieldNumber;
const int StationWorkingState::kNStateFieldNumber;
#endif  // !_MSC_VER

StationWorkingState::StationWorkingState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StationWorkingState)
}

void StationWorkingState::InitAsDefaultInstance() {
}

StationWorkingState::StationWorkingState(const StationWorkingState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StationWorkingState)
}

void StationWorkingState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nstate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StationWorkingState::~StationWorkingState() {
  // @@protoc_insertion_point(destructor:StationWorkingState)
  SharedDtor();
}

void StationWorkingState::SharedDtor() {
  if (sstationnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationnumber_;
  }
  if (this != default_instance_) {
  }
}

void StationWorkingState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StationWorkingState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StationWorkingState_descriptor_;
}

const StationWorkingState& StationWorkingState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

StationWorkingState* StationWorkingState::default_instance_ = NULL;

StationWorkingState* StationWorkingState::New() const {
  return new StationWorkingState;
}

void StationWorkingState::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_sstationnumber()) {
      if (sstationnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationnumber_->clear();
      }
    }
    nstate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StationWorkingState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StationWorkingState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sStationNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationnumber().data(), this->sstationnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nState;
        break;
      }

      // optional int32 nState = 2;
      case 2: {
        if (tag == 16) {
         parse_nState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstate_)));
          set_has_nstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StationWorkingState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StationWorkingState)
  return false;
#undef DO_
}

void StationWorkingState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StationWorkingState)
  // optional string sStationNumber = 1;
  if (has_sstationnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationnumber().data(), this->sstationnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationnumber(), output);
  }

  // optional int32 nState = 2;
  if (has_nstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StationWorkingState)
}

::google::protobuf::uint8* StationWorkingState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StationWorkingState)
  // optional string sStationNumber = 1;
  if (has_sstationnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationnumber().data(), this->sstationnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationnumber(), target);
  }

  // optional int32 nState = 2;
  if (has_nstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StationWorkingState)
  return target;
}

int StationWorkingState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sStationNumber = 1;
    if (has_sstationnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationnumber());
    }

    // optional int32 nState = 2;
    if (has_nstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StationWorkingState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StationWorkingState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StationWorkingState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StationWorkingState::MergeFrom(const StationWorkingState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationnumber()) {
      set_sstationnumber(from.sstationnumber());
    }
    if (from.has_nstate()) {
      set_nstate(from.nstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StationWorkingState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationWorkingState::CopyFrom(const StationWorkingState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationWorkingState::IsInitialized() const {

  return true;
}

void StationWorkingState::Swap(StationWorkingState* other) {
  if (other != this) {
    std::swap(sstationnumber_, other->sstationnumber_);
    std::swap(nstate_, other->nstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StationWorkingState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StationWorkingState_descriptor_;
  metadata.reflection = StationWorkingState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CheckStationWorkingReq::kSChildNumberFieldNumber;
#endif  // !_MSC_VER

CheckStationWorkingReq::CheckStationWorkingReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckStationWorkingReq)
}

void CheckStationWorkingReq::InitAsDefaultInstance() {
}

CheckStationWorkingReq::CheckStationWorkingReq(const CheckStationWorkingReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CheckStationWorkingReq)
}

void CheckStationWorkingReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CheckStationWorkingReq::~CheckStationWorkingReq() {
  // @@protoc_insertion_point(destructor:CheckStationWorkingReq)
  SharedDtor();
}

void CheckStationWorkingReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CheckStationWorkingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckStationWorkingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStationWorkingReq_descriptor_;
}

const CheckStationWorkingReq& CheckStationWorkingReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CheckStationWorkingReq* CheckStationWorkingReq::default_instance_ = NULL;

CheckStationWorkingReq* CheckStationWorkingReq::New() const {
  return new CheckStationWorkingReq;
}

void CheckStationWorkingReq::Clear() {
  schildnumber_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CheckStationWorkingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckStationWorkingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string sChildNumber = 1;
      case 1: {
        if (tag == 10) {
         parse_sChildNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_schildnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->schildnumber(this->schildnumber_size() - 1).data(),
            this->schildnumber(this->schildnumber_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "schildnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_sChildNumber;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckStationWorkingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckStationWorkingReq)
  return false;
#undef DO_
}

void CheckStationWorkingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckStationWorkingReq)
  // repeated string sChildNumber = 1;
  for (int i = 0; i < this->schildnumber_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->schildnumber(i).data(), this->schildnumber(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "schildnumber");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->schildnumber(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckStationWorkingReq)
}

::google::protobuf::uint8* CheckStationWorkingReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckStationWorkingReq)
  // repeated string sChildNumber = 1;
  for (int i = 0; i < this->schildnumber_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->schildnumber(i).data(), this->schildnumber(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "schildnumber");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->schildnumber(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckStationWorkingReq)
  return target;
}

int CheckStationWorkingReq::ByteSize() const {
  int total_size = 0;

  // repeated string sChildNumber = 1;
  total_size += 1 * this->schildnumber_size();
  for (int i = 0; i < this->schildnumber_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->schildnumber(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckStationWorkingReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CheckStationWorkingReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CheckStationWorkingReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CheckStationWorkingReq::MergeFrom(const CheckStationWorkingReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  schildnumber_.MergeFrom(from.schildnumber_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CheckStationWorkingReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckStationWorkingReq::CopyFrom(const CheckStationWorkingReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckStationWorkingReq::IsInitialized() const {

  return true;
}

void CheckStationWorkingReq::Swap(CheckStationWorkingReq* other) {
  if (other != this) {
    schildnumber_.Swap(&other->schildnumber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CheckStationWorkingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckStationWorkingReq_descriptor_;
  metadata.reflection = CheckStationWorkingReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CheckStationWorkingAck::kNResultFieldNumber;
#endif  // !_MSC_VER

CheckStationWorkingAck::CheckStationWorkingAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckStationWorkingAck)
}

void CheckStationWorkingAck::InitAsDefaultInstance() {
}

CheckStationWorkingAck::CheckStationWorkingAck(const CheckStationWorkingAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CheckStationWorkingAck)
}

void CheckStationWorkingAck::SharedCtor() {
  _cached_size_ = 0;
  nresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CheckStationWorkingAck::~CheckStationWorkingAck() {
  // @@protoc_insertion_point(destructor:CheckStationWorkingAck)
  SharedDtor();
}

void CheckStationWorkingAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CheckStationWorkingAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckStationWorkingAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStationWorkingAck_descriptor_;
}

const CheckStationWorkingAck& CheckStationWorkingAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CheckStationWorkingAck* CheckStationWorkingAck::default_instance_ = NULL;

CheckStationWorkingAck* CheckStationWorkingAck::New() const {
  return new CheckStationWorkingAck;
}

void CheckStationWorkingAck::Clear() {
  nresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CheckStationWorkingAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckStationWorkingAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nresult_)));
          set_has_nresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckStationWorkingAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckStationWorkingAck)
  return false;
#undef DO_
}

void CheckStationWorkingAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckStationWorkingAck)
  // optional int32 nResult = 1;
  if (has_nresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckStationWorkingAck)
}

::google::protobuf::uint8* CheckStationWorkingAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckStationWorkingAck)
  // optional int32 nResult = 1;
  if (has_nresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckStationWorkingAck)
  return target;
}

int CheckStationWorkingAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 nResult = 1;
    if (has_nresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckStationWorkingAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CheckStationWorkingAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CheckStationWorkingAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CheckStationWorkingAck::MergeFrom(const CheckStationWorkingAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nresult()) {
      set_nresult(from.nresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CheckStationWorkingAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckStationWorkingAck::CopyFrom(const CheckStationWorkingAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckStationWorkingAck::IsInitialized() const {

  return true;
}

void CheckStationWorkingAck::Swap(CheckStationWorkingAck* other) {
  if (other != this) {
    std::swap(nresult_, other->nresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CheckStationWorkingAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckStationWorkingAck_descriptor_;
  metadata.reflection = CheckStationWorkingAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CheackStationWorkingNotify::kNResultFieldNumber;
const int CheackStationWorkingNotify::kSUserNumberFieldNumber;
const int CheackStationWorkingNotify::kSUserNameFieldNumber;
const int CheackStationWorkingNotify::kSStationNumberFieldNumber;
#endif  // !_MSC_VER

CheackStationWorkingNotify::CheackStationWorkingNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheackStationWorkingNotify)
}

void CheackStationWorkingNotify::InitAsDefaultInstance() {
}

CheackStationWorkingNotify::CheackStationWorkingNotify(const CheackStationWorkingNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CheackStationWorkingNotify)
}

void CheackStationWorkingNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nresult_ = 0;
  susernumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstationnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CheackStationWorkingNotify::~CheackStationWorkingNotify() {
  // @@protoc_insertion_point(destructor:CheackStationWorkingNotify)
  SharedDtor();
}

void CheackStationWorkingNotify::SharedDtor() {
  if (susernumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susernumber_;
  }
  if (susername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susername_;
  }
  if (sstationnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationnumber_;
  }
  if (this != default_instance_) {
  }
}

void CheackStationWorkingNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheackStationWorkingNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheackStationWorkingNotify_descriptor_;
}

const CheackStationWorkingNotify& CheackStationWorkingNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CheackStationWorkingNotify* CheackStationWorkingNotify::default_instance_ = NULL;

CheackStationWorkingNotify* CheackStationWorkingNotify::New() const {
  return new CheackStationWorkingNotify;
}

void CheackStationWorkingNotify::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    nresult_ = 0;
    if (has_susernumber()) {
      if (susernumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susernumber_->clear();
      }
    }
    if (has_susername()) {
      if (susername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susername_->clear();
      }
    }
    if (has_sstationnumber()) {
      if (sstationnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationnumber_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CheackStationWorkingNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheackStationWorkingNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nresult_)));
          set_has_nresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sUserNumber;
        break;
      }

      // optional string sUserNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_sUserNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susernumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susernumber().data(), this->susernumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susernumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sUserName;
        break;
      }

      // optional string sUserName = 3;
      case 3: {
        if (tag == 26) {
         parse_sUserName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susername().data(), this->susername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStationNumber;
        break;
      }

      // optional string sStationNumber = 4;
      case 4: {
        if (tag == 34) {
         parse_sStationNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationnumber().data(), this->sstationnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheackStationWorkingNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheackStationWorkingNotify)
  return false;
#undef DO_
}

void CheackStationWorkingNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheackStationWorkingNotify)
  // optional int32 nResult = 1;
  if (has_nresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nresult(), output);
  }

  // optional string sUserNumber = 2;
  if (has_susernumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susernumber().data(), this->susernumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susernumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->susernumber(), output);
  }

  // optional string sUserName = 3;
  if (has_susername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susername().data(), this->susername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->susername(), output);
  }

  // optional string sStationNumber = 4;
  if (has_sstationnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationnumber().data(), this->sstationnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sstationnumber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CheackStationWorkingNotify)
}

::google::protobuf::uint8* CheackStationWorkingNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheackStationWorkingNotify)
  // optional int32 nResult = 1;
  if (has_nresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nresult(), target);
  }

  // optional string sUserNumber = 2;
  if (has_susernumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susernumber().data(), this->susernumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susernumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->susernumber(), target);
  }

  // optional string sUserName = 3;
  if (has_susername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susername().data(), this->susername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->susername(), target);
  }

  // optional string sStationNumber = 4;
  if (has_sstationnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationnumber().data(), this->sstationnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sstationnumber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheackStationWorkingNotify)
  return target;
}

int CheackStationWorkingNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 nResult = 1;
    if (has_nresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nresult());
    }

    // optional string sUserNumber = 2;
    if (has_susernumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susernumber());
    }

    // optional string sUserName = 3;
    if (has_susername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susername());
    }

    // optional string sStationNumber = 4;
    if (has_sstationnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationnumber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheackStationWorkingNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CheackStationWorkingNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CheackStationWorkingNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CheackStationWorkingNotify::MergeFrom(const CheackStationWorkingNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nresult()) {
      set_nresult(from.nresult());
    }
    if (from.has_susernumber()) {
      set_susernumber(from.susernumber());
    }
    if (from.has_susername()) {
      set_susername(from.susername());
    }
    if (from.has_sstationnumber()) {
      set_sstationnumber(from.sstationnumber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CheackStationWorkingNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheackStationWorkingNotify::CopyFrom(const CheackStationWorkingNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheackStationWorkingNotify::IsInitialized() const {

  return true;
}

void CheackStationWorkingNotify::Swap(CheackStationWorkingNotify* other) {
  if (other != this) {
    std::swap(nresult_, other->nresult_);
    std::swap(susernumber_, other->susernumber_);
    std::swap(susername_, other->susername_);
    std::swap(sstationnumber_, other->sstationnumber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CheackStationWorkingNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheackStationWorkingNotify_descriptor_;
  metadata.reflection = CheackStationWorkingNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogoutReq::kSUsrNameFieldNumber;
const int LogoutReq::kSUsrPswFieldNumber;
#endif  // !_MSC_VER

LogoutReq::LogoutReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogoutReq)
}

void LogoutReq::InitAsDefaultInstance() {
}

LogoutReq::LogoutReq(const LogoutReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogoutReq)
}

void LogoutReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  susrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  susrpsw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogoutReq::~LogoutReq() {
  // @@protoc_insertion_point(destructor:LogoutReq)
  SharedDtor();
}

void LogoutReq::SharedDtor() {
  if (susrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susrname_;
  }
  if (susrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete susrpsw_;
  }
  if (this != default_instance_) {
  }
}

void LogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutReq_descriptor_;
}

const LogoutReq& LogoutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

LogoutReq* LogoutReq::default_instance_ = NULL;

LogoutReq* LogoutReq::New() const {
  return new LogoutReq;
}

void LogoutReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_susrname()) {
      if (susrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susrname_->clear();
      }
    }
    if (has_susrpsw()) {
      if (susrpsw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        susrpsw_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sUsrName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susrname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susrname().data(), this->susrname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susrname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sUsrPsw;
        break;
      }

      // optional string sUsrPsw = 2;
      case 2: {
        if (tag == 18) {
         parse_sUsrPsw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_susrpsw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->susrpsw().data(), this->susrpsw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "susrpsw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogoutReq)
  return false;
#undef DO_
}

void LogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogoutReq)
  // optional string sUsrName = 1;
  if (has_susrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrname().data(), this->susrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->susrname(), output);
  }

  // optional string sUsrPsw = 2;
  if (has_susrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrpsw().data(), this->susrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrpsw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->susrpsw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogoutReq)
}

::google::protobuf::uint8* LogoutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogoutReq)
  // optional string sUsrName = 1;
  if (has_susrname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrname().data(), this->susrname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->susrname(), target);
  }

  // optional string sUsrPsw = 2;
  if (has_susrpsw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->susrpsw().data(), this->susrpsw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "susrpsw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->susrpsw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogoutReq)
  return target;
}

int LogoutReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sUsrName = 1;
    if (has_susrname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susrname());
    }

    // optional string sUsrPsw = 2;
    if (has_susrpsw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->susrpsw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogoutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogoutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogoutReq::MergeFrom(const LogoutReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_susrname()) {
      set_susrname(from.susrname());
    }
    if (from.has_susrpsw()) {
      set_susrpsw(from.susrpsw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq::CopyFrom(const LogoutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq::IsInitialized() const {

  return true;
}

void LogoutReq::Swap(LogoutReq* other) {
  if (other != this) {
    std::swap(susrname_, other->susrname_);
    std::swap(susrpsw_, other->susrpsw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogoutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutReq_descriptor_;
  metadata.reflection = LogoutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogoutAck::kEResultFieldNumber;
#endif  // !_MSC_VER

LogoutAck::LogoutAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogoutAck)
}

void LogoutAck::InitAsDefaultInstance() {
}

LogoutAck::LogoutAck(const LogoutAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogoutAck)
}

void LogoutAck::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogoutAck::~LogoutAck() {
  // @@protoc_insertion_point(destructor:LogoutAck)
  SharedDtor();
}

void LogoutAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LogoutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogoutAck_descriptor_;
}

const LogoutAck& LogoutAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

LogoutAck* LogoutAck::default_instance_ = NULL;

LogoutAck* LogoutAck::New() const {
  return new LogoutAck;
}

void LogoutAck::Clear() {
  eresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogoutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .e_ErrorCode eResult = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_ErrorCode_IsValid(value)) {
            set_eresult(static_cast< ::e_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogoutAck)
  return false;
#undef DO_
}

void LogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogoutAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogoutAck)
}

::google::protobuf::uint8* LogoutAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogoutAck)
  // optional .e_ErrorCode eResult = 1;
  if (has_eresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogoutAck)
  return target;
}

int LogoutAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .e_ErrorCode eResult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogoutAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogoutAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogoutAck::MergeFrom(const LogoutAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eresult()) {
      set_eresult(from.eresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutAck::CopyFrom(const LogoutAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutAck::IsInitialized() const {

  return true;
}

void LogoutAck::Swap(LogoutAck* other) {
  if (other != this) {
    std::swap(eresult_, other->eresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogoutAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogoutAck_descriptor_;
  metadata.reflection = LogoutAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TurnOnDevMsg::kSStationIdFieldNumber;
const int TurnOnDevMsg::kSDevIdFieldNumber;
const int TurnOnDevMsg::kEDevTypeFieldNumber;
const int TurnOnDevMsg::kSOperUserFieldNumber;
#endif  // !_MSC_VER

TurnOnDevMsg::TurnOnDevMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TurnOnDevMsg)
}

void TurnOnDevMsg::InitAsDefaultInstance() {
}

TurnOnDevMsg::TurnOnDevMsg(const TurnOnDevMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TurnOnDevMsg)
}

void TurnOnDevMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  soperuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TurnOnDevMsg::~TurnOnDevMsg() {
  // @@protoc_insertion_point(destructor:TurnOnDevMsg)
  SharedDtor();
}

void TurnOnDevMsg::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete soperuser_;
  }
  if (this != default_instance_) {
  }
}

void TurnOnDevMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TurnOnDevMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TurnOnDevMsg_descriptor_;
}

const TurnOnDevMsg& TurnOnDevMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

TurnOnDevMsg* TurnOnDevMsg::default_instance_ = NULL;

TurnOnDevMsg* TurnOnDevMsg::New() const {
  return new TurnOnDevMsg;
}

void TurnOnDevMsg::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    edevtype_ = 0;
    if (has_soperuser()) {
      if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        soperuser_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TurnOnDevMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TurnOnDevMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 3;
      case 3: {
        if (tag == 24) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sOperUser;
        break;
      }

      // optional string sOperUser = 4;
      case 4: {
        if (tag == 34) {
         parse_sOperUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soperuser().data(), this->soperuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "soperuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TurnOnDevMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TurnOnDevMsg)
  return false;
#undef DO_
}

void TurnOnDevMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TurnOnDevMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->edevtype(), output);
  }

  // optional string sOperUser = 4;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->soperuser(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TurnOnDevMsg)
}

::google::protobuf::uint8* TurnOnDevMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TurnOnDevMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->edevtype(), target);
  }

  // optional string sOperUser = 4;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->soperuser(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TurnOnDevMsg)
  return target;
}

int TurnOnDevMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional int32 eDevType = 3;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional string sOperUser = 4;
    if (has_soperuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->soperuser());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TurnOnDevMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TurnOnDevMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TurnOnDevMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TurnOnDevMsg::MergeFrom(const TurnOnDevMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_soperuser()) {
      set_soperuser(from.soperuser());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TurnOnDevMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnOnDevMsg::CopyFrom(const TurnOnDevMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnOnDevMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TurnOnDevMsg::Swap(TurnOnDevMsg* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(soperuser_, other->soperuser_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TurnOnDevMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TurnOnDevMsg_descriptor_;
  metadata.reflection = TurnOnDevMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TurnOffDevMsg::kSStationIdFieldNumber;
const int TurnOffDevMsg::kSDevIdFieldNumber;
const int TurnOffDevMsg::kEDevTypeFieldNumber;
const int TurnOffDevMsg::kSOperUserFieldNumber;
#endif  // !_MSC_VER

TurnOffDevMsg::TurnOffDevMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TurnOffDevMsg)
}

void TurnOffDevMsg::InitAsDefaultInstance() {
}

TurnOffDevMsg::TurnOffDevMsg(const TurnOffDevMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TurnOffDevMsg)
}

void TurnOffDevMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  soperuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TurnOffDevMsg::~TurnOffDevMsg() {
  // @@protoc_insertion_point(destructor:TurnOffDevMsg)
  SharedDtor();
}

void TurnOffDevMsg::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete soperuser_;
  }
  if (this != default_instance_) {
  }
}

void TurnOffDevMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TurnOffDevMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TurnOffDevMsg_descriptor_;
}

const TurnOffDevMsg& TurnOffDevMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

TurnOffDevMsg* TurnOffDevMsg::default_instance_ = NULL;

TurnOffDevMsg* TurnOffDevMsg::New() const {
  return new TurnOffDevMsg;
}

void TurnOffDevMsg::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    edevtype_ = 0;
    if (has_soperuser()) {
      if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        soperuser_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TurnOffDevMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TurnOffDevMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 3;
      case 3: {
        if (tag == 24) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sOperUser;
        break;
      }

      // optional string sOperUser = 4;
      case 4: {
        if (tag == 34) {
         parse_sOperUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soperuser().data(), this->soperuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "soperuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TurnOffDevMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TurnOffDevMsg)
  return false;
#undef DO_
}

void TurnOffDevMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TurnOffDevMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->edevtype(), output);
  }

  // optional string sOperUser = 4;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->soperuser(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TurnOffDevMsg)
}

::google::protobuf::uint8* TurnOffDevMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TurnOffDevMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->edevtype(), target);
  }

  // optional string sOperUser = 4;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->soperuser(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TurnOffDevMsg)
  return target;
}

int TurnOffDevMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional int32 eDevType = 3;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional string sOperUser = 4;
    if (has_soperuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->soperuser());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TurnOffDevMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TurnOffDevMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TurnOffDevMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TurnOffDevMsg::MergeFrom(const TurnOffDevMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_soperuser()) {
      set_soperuser(from.soperuser());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TurnOffDevMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnOffDevMsg::CopyFrom(const TurnOffDevMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnOffDevMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TurnOffDevMsg::Swap(TurnOffDevMsg* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(soperuser_, other->soperuser_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TurnOffDevMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TurnOffDevMsg_descriptor_;
  metadata.reflection = TurnOffDevMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CommandParam::kSParamNameFieldNumber;
const int CommandParam::kSParamValueFieldNumber;
#endif  // !_MSC_VER

CommandParam::CommandParam()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommandParam)
}

void CommandParam::InitAsDefaultInstance() {
}

CommandParam::CommandParam(const CommandParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommandParam)
}

void CommandParam::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sparamname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sparamvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommandParam::~CommandParam() {
  // @@protoc_insertion_point(destructor:CommandParam)
  SharedDtor();
}

void CommandParam::SharedDtor() {
  if (sparamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sparamname_;
  }
  if (sparamvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sparamvalue_;
  }
  if (this != default_instance_) {
  }
}

void CommandParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandParam_descriptor_;
}

const CommandParam& CommandParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CommandParam* CommandParam::default_instance_ = NULL;

CommandParam* CommandParam::New() const {
  return new CommandParam;
}

void CommandParam::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_sparamname()) {
      if (sparamname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sparamname_->clear();
      }
    }
    if (has_sparamvalue()) {
      if (sparamvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sparamvalue_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CommandParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommandParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sParamName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sparamname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sparamname().data(), this->sparamname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sparamname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sParamValue;
        break;
      }

      // optional string sParamValue = 2;
      case 2: {
        if (tag == 18) {
         parse_sParamValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sparamvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sparamvalue().data(), this->sparamvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sparamvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommandParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommandParam)
  return false;
#undef DO_
}

void CommandParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommandParam)
  // optional string sParamName = 1;
  if (has_sparamname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sparamname().data(), this->sparamname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sparamname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sparamname(), output);
  }

  // optional string sParamValue = 2;
  if (has_sparamvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sparamvalue().data(), this->sparamvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sparamvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sparamvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommandParam)
}

::google::protobuf::uint8* CommandParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommandParam)
  // optional string sParamName = 1;
  if (has_sparamname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sparamname().data(), this->sparamname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sparamname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sparamname(), target);
  }

  // optional string sParamValue = 2;
  if (has_sparamvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sparamvalue().data(), this->sparamvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sparamvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sparamvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandParam)
  return target;
}

int CommandParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sParamName = 1;
    if (has_sparamname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sparamname());
    }

    // optional string sParamValue = 2;
    if (has_sparamvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sparamvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CommandParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommandParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommandParam::MergeFrom(const CommandParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sparamname()) {
      set_sparamname(from.sparamname());
    }
    if (from.has_sparamvalue()) {
      set_sparamvalue(from.sparamvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CommandParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandParam::CopyFrom(const CommandParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandParam::IsInitialized() const {

  return true;
}

void CommandParam::Swap(CommandParam* other) {
  if (other != this) {
    std::swap(sparamname_, other->sparamname_);
    std::swap(sparamvalue_, other->sparamvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CommandParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommandParam_descriptor_;
  metadata.reflection = CommandParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeviceCommandMsg::kSStationIdFieldNumber;
const int DeviceCommandMsg::kSDevIdFieldNumber;
const int DeviceCommandMsg::kSDevNameFieldNumber;
const int DeviceCommandMsg::kEDevTypeFieldNumber;
const int DeviceCommandMsg::kSOperUserFieldNumber;
const int DeviceCommandMsg::kCParamsFieldNumber;
#endif  // !_MSC_VER

DeviceCommandMsg::DeviceCommandMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceCommandMsg)
}

void DeviceCommandMsg::InitAsDefaultInstance() {
}

DeviceCommandMsg::DeviceCommandMsg(const DeviceCommandMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeviceCommandMsg)
}

void DeviceCommandMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  soperuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeviceCommandMsg::~DeviceCommandMsg() {
  // @@protoc_insertion_point(destructor:DeviceCommandMsg)
  SharedDtor();
}

void DeviceCommandMsg::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete soperuser_;
  }
  if (this != default_instance_) {
  }
}

void DeviceCommandMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceCommandMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceCommandMsg_descriptor_;
}

const DeviceCommandMsg& DeviceCommandMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DeviceCommandMsg* DeviceCommandMsg::default_instance_ = NULL;

DeviceCommandMsg* DeviceCommandMsg::New() const {
  return new DeviceCommandMsg;
}

void DeviceCommandMsg::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
    edevtype_ = 0;
    if (has_soperuser()) {
      if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        soperuser_->clear();
      }
    }
  }
  cparams_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeviceCommandMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceCommandMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 3;
      case 3: {
        if (tag == 26) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 4;
      case 4: {
        if (tag == 32) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sOperUser;
        break;
      }

      // optional string sOperUser = 5;
      case 5: {
        if (tag == 42) {
         parse_sOperUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soperuser().data(), this->soperuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "soperuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_cParams;
        break;
      }

      // repeated .CommandParam cParams = 6;
      case 6: {
        if (tag == 50) {
         parse_cParams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cparams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_cParams;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceCommandMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceCommandMsg)
  return false;
#undef DO_
}

void DeviceCommandMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceCommandMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdevname(), output);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->edevtype(), output);
  }

  // optional string sOperUser = 5;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->soperuser(), output);
  }

  // repeated .CommandParam cParams = 6;
  for (int i = 0; i < this->cparams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->cparams(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceCommandMsg)
}

::google::protobuf::uint8* DeviceCommandMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceCommandMsg)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional string sDevName = 3;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sdevname(), target);
  }

  // optional int32 eDevType = 4;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->edevtype(), target);
  }

  // optional string sOperUser = 5;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->soperuser(), target);
  }

  // repeated .CommandParam cParams = 6;
  for (int i = 0; i < this->cparams_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->cparams(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceCommandMsg)
  return target;
}

int DeviceCommandMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional string sDevName = 3;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional int32 eDevType = 4;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional string sOperUser = 5;
    if (has_soperuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->soperuser());
    }

  }
  // repeated .CommandParam cParams = 6;
  total_size += 1 * this->cparams_size();
  for (int i = 0; i < this->cparams_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cparams(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceCommandMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeviceCommandMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeviceCommandMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeviceCommandMsg::MergeFrom(const DeviceCommandMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  cparams_.MergeFrom(from.cparams_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_soperuser()) {
      set_soperuser(from.soperuser());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeviceCommandMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceCommandMsg::CopyFrom(const DeviceCommandMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceCommandMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DeviceCommandMsg::Swap(DeviceCommandMsg* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(soperuser_, other->soperuser_);
    cparams_.Swap(&other->cparams_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeviceCommandMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceCommandMsg_descriptor_;
  metadata.reflection = DeviceCommandMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeviceCommandResultNotify::kSStationIdFieldNumber;
const int DeviceCommandResultNotify::kSDevIdFieldNumber;
const int DeviceCommandResultNotify::kEDevTypeFieldNumber;
const int DeviceCommandResultNotify::kSDevNameFieldNumber;
const int DeviceCommandResultNotify::kEErrorIdFieldNumber;
const int DeviceCommandResultNotify::kSOperUserFieldNumber;
const int DeviceCommandResultNotify::kCParamsFieldNumber;
#endif  // !_MSC_VER

DeviceCommandResultNotify::DeviceCommandResultNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceCommandResultNotify)
}

void DeviceCommandResultNotify::InitAsDefaultInstance() {
}

DeviceCommandResultNotify::DeviceCommandResultNotify(const DeviceCommandResultNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeviceCommandResultNotify)
}

void DeviceCommandResultNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sstationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdevid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  edevtype_ = 0;
  sdevname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eerrorid_ = 0;
  soperuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeviceCommandResultNotify::~DeviceCommandResultNotify() {
  // @@protoc_insertion_point(destructor:DeviceCommandResultNotify)
  SharedDtor();
}

void DeviceCommandResultNotify::SharedDtor() {
  if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstationid_;
  }
  if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevid_;
  }
  if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdevname_;
  }
  if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete soperuser_;
  }
  if (this != default_instance_) {
  }
}

void DeviceCommandResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceCommandResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceCommandResultNotify_descriptor_;
}

const DeviceCommandResultNotify& DeviceCommandResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DeviceCommandResultNotify* DeviceCommandResultNotify::default_instance_ = NULL;

DeviceCommandResultNotify* DeviceCommandResultNotify::New() const {
  return new DeviceCommandResultNotify;
}

void DeviceCommandResultNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DeviceCommandResultNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(edevtype_, eerrorid_);
    if (has_sstationid()) {
      if (sstationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstationid_->clear();
      }
    }
    if (has_sdevid()) {
      if (sdevid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevid_->clear();
      }
    }
    if (has_sdevname()) {
      if (sdevname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdevname_->clear();
      }
    }
    if (has_soperuser()) {
      if (soperuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        soperuser_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  cparams_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeviceCommandResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceCommandResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sStationId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstationid().data(), this->sstationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sDevId;
        break;
      }

      // required string sDevId = 2;
      case 2: {
        if (tag == 18) {
         parse_sDevId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevid().data(), this->sdevid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eDevType;
        break;
      }

      // optional int32 eDevType = 3;
      case 3: {
        if (tag == 24) {
         parse_eDevType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &edevtype_)));
          set_has_edevtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sDevName;
        break;
      }

      // optional string sDevName = 4;
      case 4: {
        if (tag == 34) {
         parse_sDevName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdevname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdevname().data(), this->sdevname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdevname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_eErrorId;
        break;
      }

      // optional .e_ErrorCode eErrorId = 5;
      case 5: {
        if (tag == 40) {
         parse_eErrorId:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::e_ErrorCode_IsValid(value)) {
            set_eerrorid(static_cast< ::e_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sOperUser;
        break;
      }

      // optional string sOperUser = 6;
      case 6: {
        if (tag == 50) {
         parse_sOperUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soperuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soperuser().data(), this->soperuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "soperuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cParams;
        break;
      }

      // repeated .CommandParam cParams = 7;
      case 7: {
        if (tag == 58) {
         parse_cParams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cparams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cParams;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceCommandResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceCommandResultNotify)
  return false;
#undef DO_
}

void DeviceCommandResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceCommandResultNotify)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sstationid(), output);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdevid(), output);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->edevtype(), output);
  }

  // optional string sDevName = 4;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdevname(), output);
  }

  // optional .e_ErrorCode eErrorId = 5;
  if (has_eerrorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->eerrorid(), output);
  }

  // optional string sOperUser = 6;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->soperuser(), output);
  }

  // repeated .CommandParam cParams = 7;
  for (int i = 0; i < this->cparams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cparams(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceCommandResultNotify)
}

::google::protobuf::uint8* DeviceCommandResultNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceCommandResultNotify)
  // required string sStationId = 1;
  if (has_sstationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstationid().data(), this->sstationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sstationid(), target);
  }

  // required string sDevId = 2;
  if (has_sdevid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevid().data(), this->sdevid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdevid(), target);
  }

  // optional int32 eDevType = 3;
  if (has_edevtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->edevtype(), target);
  }

  // optional string sDevName = 4;
  if (has_sdevname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdevname().data(), this->sdevname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdevname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdevname(), target);
  }

  // optional .e_ErrorCode eErrorId = 5;
  if (has_eerrorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->eerrorid(), target);
  }

  // optional string sOperUser = 6;
  if (has_soperuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soperuser().data(), this->soperuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "soperuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->soperuser(), target);
  }

  // repeated .CommandParam cParams = 7;
  for (int i = 0; i < this->cparams_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->cparams(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceCommandResultNotify)
  return target;
}

int DeviceCommandResultNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sStationId = 1;
    if (has_sstationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstationid());
    }

    // required string sDevId = 2;
    if (has_sdevid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevid());
    }

    // optional int32 eDevType = 3;
    if (has_edevtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->edevtype());
    }

    // optional string sDevName = 4;
    if (has_sdevname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdevname());
    }

    // optional .e_ErrorCode eErrorId = 5;
    if (has_eerrorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eerrorid());
    }

    // optional string sOperUser = 6;
    if (has_soperuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->soperuser());
    }

  }
  // repeated .CommandParam cParams = 7;
  total_size += 1 * this->cparams_size();
  for (int i = 0; i < this->cparams_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cparams(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceCommandResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeviceCommandResultNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeviceCommandResultNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeviceCommandResultNotify::MergeFrom(const DeviceCommandResultNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  cparams_.MergeFrom(from.cparams_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sstationid()) {
      set_sstationid(from.sstationid());
    }
    if (from.has_sdevid()) {
      set_sdevid(from.sdevid());
    }
    if (from.has_edevtype()) {
      set_edevtype(from.edevtype());
    }
    if (from.has_sdevname()) {
      set_sdevname(from.sdevname());
    }
    if (from.has_eerrorid()) {
      set_eerrorid(from.eerrorid());
    }
    if (from.has_soperuser()) {
      set_soperuser(from.soperuser());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeviceCommandResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceCommandResultNotify::CopyFrom(const DeviceCommandResultNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceCommandResultNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DeviceCommandResultNotify::Swap(DeviceCommandResultNotify* other) {
  if (other != this) {
    std::swap(sstationid_, other->sstationid_);
    std::swap(sdevid_, other->sdevid_);
    std::swap(edevtype_, other->edevtype_);
    std::swap(sdevname_, other->sdevname_);
    std::swap(eerrorid_, other->eerrorid_);
    std::swap(soperuser_, other->soperuser_);
    cparams_.Swap(&other->cparams_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeviceCommandResultNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceCommandResultNotify_descriptor_;
  metadata.reflection = DeviceCommandResultNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemindEventNotify::kNTokenIdFieldNumber;
const int RemindEventNotify::kEEventTypeFieldNumber;
const int RemindEventNotify::kERemindTypeFieldNumber;
const int RemindEventNotify::kSDispatcherFieldNumber;
const int RemindEventNotify::kSHappenTimeFieldNumber;
const int RemindEventNotify::kSContentFieldNumber;
const int RemindEventNotify::kNNeedConfirmFieldNumber;
const int RemindEventNotify::kNTimeoutFieldNumber;
const int RemindEventNotify::kNAdvanceSecondsFieldNumber;
const int RemindEventNotify::kSReservedFieldNumber;
#endif  // !_MSC_VER

RemindEventNotify::RemindEventNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemindEventNotify)
}

void RemindEventNotify::InitAsDefaultInstance() {
}

RemindEventNotify::RemindEventNotify(const RemindEventNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RemindEventNotify)
}

void RemindEventNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ntokenid_ = GOOGLE_ULONGLONG(0);
  eeventtype_ = 0;
  eremindtype_ = 0;
  sdispatcher_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shappentime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nneedconfirm_ = 0;
  ntimeout_ = 0;
  nadvanceseconds_ = 0;
  sreserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemindEventNotify::~RemindEventNotify() {
  // @@protoc_insertion_point(destructor:RemindEventNotify)
  SharedDtor();
}

void RemindEventNotify::SharedDtor() {
  if (sdispatcher_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sdispatcher_;
  }
  if (shappentime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shappentime_;
  }
  if (scontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scontent_;
  }
  if (sreserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreserved_;
  }
  if (this != default_instance_) {
  }
}

void RemindEventNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemindEventNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemindEventNotify_descriptor_;
}

const RemindEventNotify& RemindEventNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemindEventNotify* RemindEventNotify::default_instance_ = NULL;

RemindEventNotify* RemindEventNotify::New() const {
  return new RemindEventNotify;
}

void RemindEventNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RemindEventNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(ntokenid_, eremindtype_);
    ZR_(nneedconfirm_, ntimeout_);
    if (has_sdispatcher()) {
      if (sdispatcher_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sdispatcher_->clear();
      }
    }
    if (has_shappentime()) {
      if (shappentime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        shappentime_->clear();
      }
    }
    if (has_scontent()) {
      if (scontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scontent_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    nadvanceseconds_ = 0;
    if (has_sreserved()) {
      if (sreserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sreserved_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemindEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemindEventNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 nTokenId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ntokenid_)));
          set_has_ntokenid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eEventType;
        break;
      }

      // optional int32 eEventType = 2;
      case 2: {
        if (tag == 16) {
         parse_eEventType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eeventtype_)));
          set_has_eeventtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eRemindType;
        break;
      }

      // optional int32 eRemindType = 3;
      case 3: {
        if (tag == 24) {
         parse_eRemindType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eremindtype_)));
          set_has_eremindtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sDispatcher;
        break;
      }

      // optional string sDispatcher = 4;
      case 4: {
        if (tag == 34) {
         parse_sDispatcher:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdispatcher()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdispatcher().data(), this->sdispatcher().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sdispatcher");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sHappenTime;
        break;
      }

      // optional string sHappenTime = 5;
      case 5: {
        if (tag == 42) {
         parse_sHappenTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shappentime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shappentime().data(), this->shappentime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "shappentime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sContent;
        break;
      }

      // optional string sContent = 6;
      case 6: {
        if (tag == 50) {
         parse_sContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scontent().data(), this->scontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_nNeedConfirm;
        break;
      }

      // optional int32 nNeedConfirm = 7;
      case 7: {
        if (tag == 56) {
         parse_nNeedConfirm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nneedconfirm_)));
          set_has_nneedconfirm();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_nTimeout;
        break;
      }

      // optional int32 nTimeout = 8;
      case 8: {
        if (tag == 64) {
         parse_nTimeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntimeout_)));
          set_has_ntimeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_nAdvanceSeconds;
        break;
      }

      // optional int32 nAdvanceSeconds = 9;
      case 9: {
        if (tag == 72) {
         parse_nAdvanceSeconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nadvanceseconds_)));
          set_has_nadvanceseconds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sReserved;
        break;
      }

      // optional string sReserved = 10;
      case 10: {
        if (tag == 82) {
         parse_sReserved:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sreserved()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sreserved().data(), this->sreserved().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sreserved");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemindEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemindEventNotify)
  return false;
#undef DO_
}

void RemindEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemindEventNotify)
  // required uint64 nTokenId = 1;
  if (has_ntokenid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ntokenid(), output);
  }

  // optional int32 eEventType = 2;
  if (has_eeventtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eeventtype(), output);
  }

  // optional int32 eRemindType = 3;
  if (has_eremindtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eremindtype(), output);
  }

  // optional string sDispatcher = 4;
  if (has_sdispatcher()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdispatcher().data(), this->sdispatcher().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdispatcher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdispatcher(), output);
  }

  // optional string sHappenTime = 5;
  if (has_shappentime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shappentime().data(), this->shappentime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "shappentime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->shappentime(), output);
  }

  // optional string sContent = 6;
  if (has_scontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scontent(), output);
  }

  // optional int32 nNeedConfirm = 7;
  if (has_nneedconfirm()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nneedconfirm(), output);
  }

  // optional int32 nTimeout = 8;
  if (has_ntimeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ntimeout(), output);
  }

  // optional int32 nAdvanceSeconds = 9;
  if (has_nadvanceseconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->nadvanceseconds(), output);
  }

  // optional string sReserved = 10;
  if (has_sreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreserved().data(), this->sreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreserved");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->sreserved(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemindEventNotify)
}

::google::protobuf::uint8* RemindEventNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RemindEventNotify)
  // required uint64 nTokenId = 1;
  if (has_ntokenid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ntokenid(), target);
  }

  // optional int32 eEventType = 2;
  if (has_eeventtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eeventtype(), target);
  }

  // optional int32 eRemindType = 3;
  if (has_eremindtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eremindtype(), target);
  }

  // optional string sDispatcher = 4;
  if (has_sdispatcher()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdispatcher().data(), this->sdispatcher().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sdispatcher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdispatcher(), target);
  }

  // optional string sHappenTime = 5;
  if (has_shappentime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shappentime().data(), this->shappentime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "shappentime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->shappentime(), target);
  }

  // optional string sContent = 6;
  if (has_scontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scontent().data(), this->scontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->scontent(), target);
  }

  // optional int32 nNeedConfirm = 7;
  if (has_nneedconfirm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nneedconfirm(), target);
  }

  // optional int32 nTimeout = 8;
  if (has_ntimeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ntimeout(), target);
  }

  // optional int32 nAdvanceSeconds = 9;
  if (has_nadvanceseconds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->nadvanceseconds(), target);
  }

  // optional string sReserved = 10;
  if (has_sreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreserved().data(), this->sreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreserved");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sreserved(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemindEventNotify)
  return target;
}

int RemindEventNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 nTokenId = 1;
    if (has_ntokenid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ntokenid());
    }

    // optional int32 eEventType = 2;
    if (has_eeventtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eeventtype());
    }

    // optional int32 eRemindType = 3;
    if (has_eremindtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eremindtype());
    }

    // optional string sDispatcher = 4;
    if (has_sdispatcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sdispatcher());
    }

    // optional string sHappenTime = 5;
    if (has_shappentime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shappentime());
    }

    // optional string sContent = 6;
    if (has_scontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scontent());
    }

    // optional int32 nNeedConfirm = 7;
    if (has_nneedconfirm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nneedconfirm());
    }

    // optional int32 nTimeout = 8;
    if (has_ntimeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntimeout());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 nAdvanceSeconds = 9;
    if (has_nadvanceseconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nadvanceseconds());
    }

    // optional string sReserved = 10;
    if (has_sreserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sreserved());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemindEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemindEventNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemindEventNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemindEventNotify::MergeFrom(const RemindEventNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ntokenid()) {
      set_ntokenid(from.ntokenid());
    }
    if (from.has_eeventtype()) {
      set_eeventtype(from.eeventtype());
    }
    if (from.has_eremindtype()) {
      set_eremindtype(from.eremindtype());
    }
    if (from.has_sdispatcher()) {
      set_sdispatcher(from.sdispatcher());
    }
    if (from.has_shappentime()) {
      set_shappentime(from.shappentime());
    }
    if (from.has_scontent()) {
      set_scontent(from.scontent());
    }
    if (from.has_nneedconfirm()) {
      set_nneedconfirm(from.nneedconfirm());
    }
    if (from.has_ntimeout()) {
      set_ntimeout(from.ntimeout());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_nadvanceseconds()) {
      set_nadvanceseconds(from.nadvanceseconds());
    }
    if (from.has_sreserved()) {
      set_sreserved(from.sreserved());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemindEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemindEventNotify::CopyFrom(const RemindEventNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemindEventNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemindEventNotify::Swap(RemindEventNotify* other) {
  if (other != this) {
    std::swap(ntokenid_, other->ntokenid_);
    std::swap(eeventtype_, other->eeventtype_);
    std::swap(eremindtype_, other->eremindtype_);
    std::swap(sdispatcher_, other->sdispatcher_);
    std::swap(shappentime_, other->shappentime_);
    std::swap(scontent_, other->scontent_);
    std::swap(nneedconfirm_, other->nneedconfirm_);
    std::swap(ntimeout_, other->ntimeout_);
    std::swap(nadvanceseconds_, other->nadvanceseconds_);
    std::swap(sreserved_, other->sreserved_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemindEventNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemindEventNotify_descriptor_;
  metadata.reflection = RemindEventNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemindEventAck::kNTokenIdFieldNumber;
const int RemindEventAck::kNConfirmStateFieldNumber;
const int RemindEventAck::kSConfirmUserFieldNumber;
const int RemindEventAck::kSConfirmContentFieldNumber;
const int RemindEventAck::kSReservedFieldNumber;
#endif  // !_MSC_VER

RemindEventAck::RemindEventAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemindEventAck)
}

void RemindEventAck::InitAsDefaultInstance() {
}

RemindEventAck::RemindEventAck(const RemindEventAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RemindEventAck)
}

void RemindEventAck::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ntokenid_ = 0;
  nconfirmstate_ = 0;
  sconfirmuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sconfirmcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sreserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemindEventAck::~RemindEventAck() {
  // @@protoc_insertion_point(destructor:RemindEventAck)
  SharedDtor();
}

void RemindEventAck::SharedDtor() {
  if (sconfirmuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sconfirmuser_;
  }
  if (sconfirmcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sconfirmcontent_;
  }
  if (sreserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreserved_;
  }
  if (this != default_instance_) {
  }
}

void RemindEventAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemindEventAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemindEventAck_descriptor_;
}

const RemindEventAck& RemindEventAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemindEventAck* RemindEventAck::default_instance_ = NULL;

RemindEventAck* RemindEventAck::New() const {
  return new RemindEventAck;
}

void RemindEventAck::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RemindEventAck*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(ntokenid_, nconfirmstate_);
    if (has_sconfirmuser()) {
      if (sconfirmuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sconfirmuser_->clear();
      }
    }
    if (has_sconfirmcontent()) {
      if (sconfirmcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sconfirmcontent_->clear();
      }
    }
    if (has_sreserved()) {
      if (sreserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sreserved_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemindEventAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemindEventAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nTokenId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntokenid_)));
          set_has_ntokenid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nConfirmState;
        break;
      }

      // optional int32 nConfirmState = 2;
      case 2: {
        if (tag == 16) {
         parse_nConfirmState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconfirmstate_)));
          set_has_nconfirmstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sConfirmUser;
        break;
      }

      // optional string sConfirmUser = 3;
      case 3: {
        if (tag == 26) {
         parse_sConfirmUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sconfirmuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sconfirmuser().data(), this->sconfirmuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sconfirmuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sConfirmContent;
        break;
      }

      // optional string sConfirmContent = 4;
      case 4: {
        if (tag == 34) {
         parse_sConfirmContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sconfirmcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sconfirmcontent().data(), this->sconfirmcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sconfirmcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sReserved;
        break;
      }

      // optional string sReserved = 5;
      case 5: {
        if (tag == 42) {
         parse_sReserved:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sreserved()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sreserved().data(), this->sreserved().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sreserved");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemindEventAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemindEventAck)
  return false;
#undef DO_
}

void RemindEventAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemindEventAck)
  // required int32 nTokenId = 1;
  if (has_ntokenid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ntokenid(), output);
  }

  // optional int32 nConfirmState = 2;
  if (has_nconfirmstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nconfirmstate(), output);
  }

  // optional string sConfirmUser = 3;
  if (has_sconfirmuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmuser().data(), this->sconfirmuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sconfirmuser(), output);
  }

  // optional string sConfirmContent = 4;
  if (has_sconfirmcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmcontent().data(), this->sconfirmcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sconfirmcontent(), output);
  }

  // optional string sReserved = 5;
  if (has_sreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreserved().data(), this->sreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreserved");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sreserved(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemindEventAck)
}

::google::protobuf::uint8* RemindEventAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RemindEventAck)
  // required int32 nTokenId = 1;
  if (has_ntokenid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ntokenid(), target);
  }

  // optional int32 nConfirmState = 2;
  if (has_nconfirmstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nconfirmstate(), target);
  }

  // optional string sConfirmUser = 3;
  if (has_sconfirmuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmuser().data(), this->sconfirmuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sconfirmuser(), target);
  }

  // optional string sConfirmContent = 4;
  if (has_sconfirmcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmcontent().data(), this->sconfirmcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sconfirmcontent(), target);
  }

  // optional string sReserved = 5;
  if (has_sreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreserved().data(), this->sreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreserved");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sreserved(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemindEventAck)
  return target;
}

int RemindEventAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nTokenId = 1;
    if (has_ntokenid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntokenid());
    }

    // optional int32 nConfirmState = 2;
    if (has_nconfirmstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nconfirmstate());
    }

    // optional string sConfirmUser = 3;
    if (has_sconfirmuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sconfirmuser());
    }

    // optional string sConfirmContent = 4;
    if (has_sconfirmcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sconfirmcontent());
    }

    // optional string sReserved = 5;
    if (has_sreserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sreserved());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemindEventAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemindEventAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemindEventAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemindEventAck::MergeFrom(const RemindEventAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ntokenid()) {
      set_ntokenid(from.ntokenid());
    }
    if (from.has_nconfirmstate()) {
      set_nconfirmstate(from.nconfirmstate());
    }
    if (from.has_sconfirmuser()) {
      set_sconfirmuser(from.sconfirmuser());
    }
    if (from.has_sconfirmcontent()) {
      set_sconfirmcontent(from.sconfirmcontent());
    }
    if (from.has_sreserved()) {
      set_sreserved(from.sreserved());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemindEventAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemindEventAck::CopyFrom(const RemindEventAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemindEventAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemindEventAck::Swap(RemindEventAck* other) {
  if (other != this) {
    std::swap(ntokenid_, other->ntokenid_);
    std::swap(nconfirmstate_, other->nconfirmstate_);
    std::swap(sconfirmuser_, other->sconfirmuser_);
    std::swap(sconfirmcontent_, other->sconfirmcontent_);
    std::swap(sreserved_, other->sreserved_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemindEventAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemindEventAck_descriptor_;
  metadata.reflection = RemindEventAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WebSocketMessage::kNMsgTypeFieldNumber;
const int WebSocketMessage::kSMsgTypeFieldNumber;
const int WebSocketMessage::kMsgLoginReqFieldNumber;
const int WebSocketMessage::kMsgLoginAckFieldNumber;
const int WebSocketMessage::kMonitorDataNtyFieldNumber;
const int WebSocketMessage::kDevNetStatusNtyFieldNumber;
const int WebSocketMessage::kDevWorkStatusNtyFieldNumber;
const int WebSocketMessage::kDevAlarmStatusNtyFieldNumber;
const int WebSocketMessage::kCommandResultNtyFieldNumber;
const int WebSocketMessage::kMsgTurnOnReqFieldNumber;
const int WebSocketMessage::kMsgTurnOffNtyFieldNumber;
const int WebSocketMessage::kMsgCommandReqFieldNumber;
#endif  // !_MSC_VER

WebSocketMessage::WebSocketMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WebSocketMessage)
}

void WebSocketMessage::InitAsDefaultInstance() {
  msgloginreq_ = const_cast< ::LoginReq*>(&::LoginReq::default_instance());
  msgloginack_ = const_cast< ::LoginAck*>(&::LoginAck::default_instance());
  monitordatanty_ = const_cast< ::DevDataNotify*>(&::DevDataNotify::default_instance());
  devnetstatusnty_ = const_cast< ::DevNetStatusNotify*>(&::DevNetStatusNotify::default_instance());
  devworkstatusnty_ = const_cast< ::DevWorkStatusNotify*>(&::DevWorkStatusNotify::default_instance());
  devalarmstatusnty_ = const_cast< ::DevAlarmStatusNotify*>(&::DevAlarmStatusNotify::default_instance());
  commandresultnty_ = const_cast< ::DeviceCommandResultNotify*>(&::DeviceCommandResultNotify::default_instance());
  msgturnonreq_ = const_cast< ::TurnOnDevMsg*>(&::TurnOnDevMsg::default_instance());
  msgturnoffnty_ = const_cast< ::TurnOffDevMsg*>(&::TurnOffDevMsg::default_instance());
  msgcommandreq_ = const_cast< ::DeviceCommandMsg*>(&::DeviceCommandMsg::default_instance());
}

WebSocketMessage::WebSocketMessage(const WebSocketMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WebSocketMessage)
}

void WebSocketMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nmsgtype_ = 0;
  smsgtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgloginreq_ = NULL;
  msgloginack_ = NULL;
  monitordatanty_ = NULL;
  devnetstatusnty_ = NULL;
  devworkstatusnty_ = NULL;
  devalarmstatusnty_ = NULL;
  commandresultnty_ = NULL;
  msgturnonreq_ = NULL;
  msgturnoffnty_ = NULL;
  msgcommandreq_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WebSocketMessage::~WebSocketMessage() {
  // @@protoc_insertion_point(destructor:WebSocketMessage)
  SharedDtor();
}

void WebSocketMessage::SharedDtor() {
  if (smsgtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smsgtype_;
  }
  if (this != default_instance_) {
    delete msgloginreq_;
    delete msgloginack_;
    delete monitordatanty_;
    delete devnetstatusnty_;
    delete devworkstatusnty_;
    delete devalarmstatusnty_;
    delete commandresultnty_;
    delete msgturnonreq_;
    delete msgturnoffnty_;
    delete msgcommandreq_;
  }
}

void WebSocketMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebSocketMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WebSocketMessage_descriptor_;
}

const WebSocketMessage& WebSocketMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

WebSocketMessage* WebSocketMessage::default_instance_ = NULL;

WebSocketMessage* WebSocketMessage::New() const {
  return new WebSocketMessage;
}

void WebSocketMessage::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    nmsgtype_ = 0;
    if (has_smsgtype()) {
      if (smsgtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smsgtype_->clear();
      }
    }
    if (has_msgloginreq()) {
      if (msgloginreq_ != NULL) msgloginreq_->::LoginReq::Clear();
    }
    if (has_msgloginack()) {
      if (msgloginack_ != NULL) msgloginack_->::LoginAck::Clear();
    }
    if (has_monitordatanty()) {
      if (monitordatanty_ != NULL) monitordatanty_->::DevDataNotify::Clear();
    }
    if (has_devnetstatusnty()) {
      if (devnetstatusnty_ != NULL) devnetstatusnty_->::DevNetStatusNotify::Clear();
    }
    if (has_devworkstatusnty()) {
      if (devworkstatusnty_ != NULL) devworkstatusnty_->::DevWorkStatusNotify::Clear();
    }
    if (has_devalarmstatusnty()) {
      if (devalarmstatusnty_ != NULL) devalarmstatusnty_->::DevAlarmStatusNotify::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    if (has_commandresultnty()) {
      if (commandresultnty_ != NULL) commandresultnty_->::DeviceCommandResultNotify::Clear();
    }
    if (has_msgturnonreq()) {
      if (msgturnonreq_ != NULL) msgturnonreq_->::TurnOnDevMsg::Clear();
    }
    if (has_msgturnoffnty()) {
      if (msgturnoffnty_ != NULL) msgturnoffnty_->::TurnOffDevMsg::Clear();
    }
    if (has_msgcommandreq()) {
      if (msgcommandreq_ != NULL) msgcommandreq_->::DeviceCommandMsg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WebSocketMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WebSocketMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nMsgType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmsgtype_)));
          set_has_nmsgtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMsgType;
        break;
      }

      // required string sMsgType = 2;
      case 2: {
        if (tag == 18) {
         parse_sMsgType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smsgtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smsgtype().data(), this->smsgtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smsgtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msgLoginReq;
        break;
      }

      // optional .LoginReq msgLoginReq = 3;
      case 3: {
        if (tag == 26) {
         parse_msgLoginReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgloginreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msgLoginAck;
        break;
      }

      // optional .LoginAck msgLoginAck = 4;
      case 4: {
        if (tag == 34) {
         parse_msgLoginAck:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgloginack()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_monitorDataNty;
        break;
      }

      // optional .DevDataNotify monitorDataNty = 5;
      case 5: {
        if (tag == 42) {
         parse_monitorDataNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monitordatanty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_devNetStatusNty;
        break;
      }

      // optional .DevNetStatusNotify devNetStatusNty = 6;
      case 6: {
        if (tag == 50) {
         parse_devNetStatusNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devnetstatusnty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_devWorkStatusNty;
        break;
      }

      // optional .DevWorkStatusNotify devWorkStatusNty = 7;
      case 7: {
        if (tag == 58) {
         parse_devWorkStatusNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devworkstatusnty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_devAlarmStatusNty;
        break;
      }

      // optional .DevAlarmStatusNotify devAlarmStatusNty = 8;
      case 8: {
        if (tag == 66) {
         parse_devAlarmStatusNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_devalarmstatusnty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_commandResultNty;
        break;
      }

      // optional .DeviceCommandResultNotify commandResultNty = 9;
      case 9: {
        if (tag == 74) {
         parse_commandResultNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commandresultnty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_msgTurnOnReq;
        break;
      }

      // optional .TurnOnDevMsg msgTurnOnReq = 10;
      case 10: {
        if (tag == 82) {
         parse_msgTurnOnReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgturnonreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_msgTurnOffNty;
        break;
      }

      // optional .TurnOffDevMsg msgTurnOffNty = 11;
      case 11: {
        if (tag == 90) {
         parse_msgTurnOffNty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgturnoffnty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_msgCommandReq;
        break;
      }

      // optional .DeviceCommandMsg msgCommandReq = 12;
      case 12: {
        if (tag == 98) {
         parse_msgCommandReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgcommandreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WebSocketMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WebSocketMessage)
  return false;
#undef DO_
}

void WebSocketMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WebSocketMessage)
  // required int32 nMsgType = 1;
  if (has_nmsgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nmsgtype(), output);
  }

  // required string sMsgType = 2;
  if (has_smsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smsgtype().data(), this->smsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smsgtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smsgtype(), output);
  }

  // optional .LoginReq msgLoginReq = 3;
  if (has_msgloginreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->msgloginreq(), output);
  }

  // optional .LoginAck msgLoginAck = 4;
  if (has_msgloginack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->msgloginack(), output);
  }

  // optional .DevDataNotify monitorDataNty = 5;
  if (has_monitordatanty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->monitordatanty(), output);
  }

  // optional .DevNetStatusNotify devNetStatusNty = 6;
  if (has_devnetstatusnty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->devnetstatusnty(), output);
  }

  // optional .DevWorkStatusNotify devWorkStatusNty = 7;
  if (has_devworkstatusnty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->devworkstatusnty(), output);
  }

  // optional .DevAlarmStatusNotify devAlarmStatusNty = 8;
  if (has_devalarmstatusnty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->devalarmstatusnty(), output);
  }

  // optional .DeviceCommandResultNotify commandResultNty = 9;
  if (has_commandresultnty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->commandresultnty(), output);
  }

  // optional .TurnOnDevMsg msgTurnOnReq = 10;
  if (has_msgturnonreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->msgturnonreq(), output);
  }

  // optional .TurnOffDevMsg msgTurnOffNty = 11;
  if (has_msgturnoffnty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->msgturnoffnty(), output);
  }

  // optional .DeviceCommandMsg msgCommandReq = 12;
  if (has_msgcommandreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->msgcommandreq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WebSocketMessage)
}

::google::protobuf::uint8* WebSocketMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WebSocketMessage)
  // required int32 nMsgType = 1;
  if (has_nmsgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nmsgtype(), target);
  }

  // required string sMsgType = 2;
  if (has_smsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smsgtype().data(), this->smsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smsgtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->smsgtype(), target);
  }

  // optional .LoginReq msgLoginReq = 3;
  if (has_msgloginreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->msgloginreq(), target);
  }

  // optional .LoginAck msgLoginAck = 4;
  if (has_msgloginack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->msgloginack(), target);
  }

  // optional .DevDataNotify monitorDataNty = 5;
  if (has_monitordatanty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->monitordatanty(), target);
  }

  // optional .DevNetStatusNotify devNetStatusNty = 6;
  if (has_devnetstatusnty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->devnetstatusnty(), target);
  }

  // optional .DevWorkStatusNotify devWorkStatusNty = 7;
  if (has_devworkstatusnty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->devworkstatusnty(), target);
  }

  // optional .DevAlarmStatusNotify devAlarmStatusNty = 8;
  if (has_devalarmstatusnty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->devalarmstatusnty(), target);
  }

  // optional .DeviceCommandResultNotify commandResultNty = 9;
  if (has_commandresultnty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->commandresultnty(), target);
  }

  // optional .TurnOnDevMsg msgTurnOnReq = 10;
  if (has_msgturnonreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->msgturnonreq(), target);
  }

  // optional .TurnOffDevMsg msgTurnOffNty = 11;
  if (has_msgturnoffnty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->msgturnoffnty(), target);
  }

  // optional .DeviceCommandMsg msgCommandReq = 12;
  if (has_msgcommandreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->msgcommandreq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WebSocketMessage)
  return target;
}

int WebSocketMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nMsgType = 1;
    if (has_nmsgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmsgtype());
    }

    // required string sMsgType = 2;
    if (has_smsgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smsgtype());
    }

    // optional .LoginReq msgLoginReq = 3;
    if (has_msgloginreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgloginreq());
    }

    // optional .LoginAck msgLoginAck = 4;
    if (has_msgloginack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgloginack());
    }

    // optional .DevDataNotify monitorDataNty = 5;
    if (has_monitordatanty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->monitordatanty());
    }

    // optional .DevNetStatusNotify devNetStatusNty = 6;
    if (has_devnetstatusnty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devnetstatusnty());
    }

    // optional .DevWorkStatusNotify devWorkStatusNty = 7;
    if (has_devworkstatusnty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devworkstatusnty());
    }

    // optional .DevAlarmStatusNotify devAlarmStatusNty = 8;
    if (has_devalarmstatusnty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->devalarmstatusnty());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .DeviceCommandResultNotify commandResultNty = 9;
    if (has_commandresultnty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commandresultnty());
    }

    // optional .TurnOnDevMsg msgTurnOnReq = 10;
    if (has_msgturnonreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgturnonreq());
    }

    // optional .TurnOffDevMsg msgTurnOffNty = 11;
    if (has_msgturnoffnty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgturnoffnty());
    }

    // optional .DeviceCommandMsg msgCommandReq = 12;
    if (has_msgcommandreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgcommandreq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebSocketMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WebSocketMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WebSocketMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WebSocketMessage::MergeFrom(const WebSocketMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nmsgtype()) {
      set_nmsgtype(from.nmsgtype());
    }
    if (from.has_smsgtype()) {
      set_smsgtype(from.smsgtype());
    }
    if (from.has_msgloginreq()) {
      mutable_msgloginreq()->::LoginReq::MergeFrom(from.msgloginreq());
    }
    if (from.has_msgloginack()) {
      mutable_msgloginack()->::LoginAck::MergeFrom(from.msgloginack());
    }
    if (from.has_monitordatanty()) {
      mutable_monitordatanty()->::DevDataNotify::MergeFrom(from.monitordatanty());
    }
    if (from.has_devnetstatusnty()) {
      mutable_devnetstatusnty()->::DevNetStatusNotify::MergeFrom(from.devnetstatusnty());
    }
    if (from.has_devworkstatusnty()) {
      mutable_devworkstatusnty()->::DevWorkStatusNotify::MergeFrom(from.devworkstatusnty());
    }
    if (from.has_devalarmstatusnty()) {
      mutable_devalarmstatusnty()->::DevAlarmStatusNotify::MergeFrom(from.devalarmstatusnty());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_commandresultnty()) {
      mutable_commandresultnty()->::DeviceCommandResultNotify::MergeFrom(from.commandresultnty());
    }
    if (from.has_msgturnonreq()) {
      mutable_msgturnonreq()->::TurnOnDevMsg::MergeFrom(from.msgturnonreq());
    }
    if (from.has_msgturnoffnty()) {
      mutable_msgturnoffnty()->::TurnOffDevMsg::MergeFrom(from.msgturnoffnty());
    }
    if (from.has_msgcommandreq()) {
      mutable_msgcommandreq()->::DeviceCommandMsg::MergeFrom(from.msgcommandreq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WebSocketMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebSocketMessage::CopyFrom(const WebSocketMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebSocketMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_msgloginack()) {
    if (!this->msgloginack().IsInitialized()) return false;
  }
  if (has_monitordatanty()) {
    if (!this->monitordatanty().IsInitialized()) return false;
  }
  if (has_devnetstatusnty()) {
    if (!this->devnetstatusnty().IsInitialized()) return false;
  }
  if (has_devworkstatusnty()) {
    if (!this->devworkstatusnty().IsInitialized()) return false;
  }
  if (has_devalarmstatusnty()) {
    if (!this->devalarmstatusnty().IsInitialized()) return false;
  }
  if (has_commandresultnty()) {
    if (!this->commandresultnty().IsInitialized()) return false;
  }
  if (has_msgturnonreq()) {
    if (!this->msgturnonreq().IsInitialized()) return false;
  }
  if (has_msgturnoffnty()) {
    if (!this->msgturnoffnty().IsInitialized()) return false;
  }
  if (has_msgcommandreq()) {
    if (!this->msgcommandreq().IsInitialized()) return false;
  }
  return true;
}

void WebSocketMessage::Swap(WebSocketMessage* other) {
  if (other != this) {
    std::swap(nmsgtype_, other->nmsgtype_);
    std::swap(smsgtype_, other->smsgtype_);
    std::swap(msgloginreq_, other->msgloginreq_);
    std::swap(msgloginack_, other->msgloginack_);
    std::swap(monitordatanty_, other->monitordatanty_);
    std::swap(devnetstatusnty_, other->devnetstatusnty_);
    std::swap(devworkstatusnty_, other->devworkstatusnty_);
    std::swap(devalarmstatusnty_, other->devalarmstatusnty_);
    std::swap(commandresultnty_, other->commandresultnty_);
    std::swap(msgturnonreq_, other->msgturnonreq_);
    std::swap(msgturnoffnty_, other->msgturnoffnty_);
    std::swap(msgcommandreq_, other->msgcommandreq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WebSocketMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WebSocketMessage_descriptor_;
  metadata.reflection = WebSocketMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
